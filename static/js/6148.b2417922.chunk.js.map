{"version":3,"file":"static/js/6148.b2417922.chunk.js","mappings":"iIAEaA,EAAUA,CAACC,EAAkBC,IAEtCA,IACE,YAAaA,GAAMA,EAAGF,QAAQC,IAC9BD,EAAQC,EAAWC,EAAGC,cAAwCC,M,wCCDvDC,EAAiBC,GAC5BA,EAAWC,QAAQC,GAAcA,IAAWC,KAAK,I,kFCNnD,MCuBaC,EAAO,MALpBC,WAAAA,CAAAC,I,0KA+FE,KAAAC,aAAe,CAACC,EAA2BC,IACzCD,EAAGE,SAASD,GAAaE,YAAYC,OAEvC,KAAAC,YACE,CAACJ,EAAqBK,IACtB,CAACC,EAA4BC,KAC3B,MAAMC,EAAOC,KAAKX,aACF,QAAdO,EAAsBC,EAAMC,EAC5BP,GAEIU,EAAOD,KAAKX,aACF,QAAdO,EAAsBE,EAAMD,EAC5BN,GAEIW,EAAOC,WAAWJ,EAAKK,WAAW,KAAM,KACxCC,EAAOF,WAAWF,EAAKG,WAAW,KAAM,KAC9C,OAAKE,MAAMJ,IAAUI,MAAMD,GAGpBN,EAAKQ,cAAcN,GAFjBC,EAAOG,CAEe,C,CAlFnCG,eAAAA,CACEC,GAKA,MAAMC,GAAgBlC,EAAAA,EAAAA,GAAQ,kBAAmBiC,EAAGE,QASpD,GARAC,MAAMC,KAAKH,EAAcI,WAAWtB,UAAUuB,SAC5C,CAACC,EAA8BC,KACzBA,IAAUR,EAAGS,OAAO3B,aACtByB,EAAGG,W,IAKLV,EAAGW,iBAAkB,OAEzB,MAAMC,EAAcrB,KAAKtB,GAAG4C,cAAc,iBAC1CV,MAAMC,KAAKQ,EAAYE,iBAAiB,iBACrCC,KAAKxB,KAAKL,YAAYc,EAAGS,OAAO3B,YAAakB,EAAGS,OAAOtB,YACvDmB,SAASzB,GAAO+B,EAAYI,YAAYnC,I,CAI7CoC,oBAAAA,CACEjB,GAIA,GAAIA,EAAGW,iBAAkB,OAGzB,MAAMC,EAAcrB,KAAKtB,GAAG4C,cAAc,iBAC1CV,MAAMC,KAAKQ,EAAYE,iBAAiB,iBAAiBR,SACtDzB,GAAQA,EAAGqC,SAAWlB,EAAGS,OAAOS,U,CAKrC,uBAAMC,CACJnB,GAIA,GAAIA,EAAGW,iBAAkB,OAGzB,MACMS,EADc7B,KAAKtB,GAAG4C,cAAc,iBACHC,iBAAiB,gBAClDO,EAAclB,MAAMC,KAAKgB,GAAoBE,OAChDzC,GAAOA,EAAGqC,WAEPK,EAAepB,MAAMC,KAAKgB,GAAoBE,OACjDzC,IAAQA,EAAGqC,WAERM,EAAcjC,KAAKtB,GAAG4C,cAAc,iBAC1C,IAAKW,EAAa,OAElB,MAAMC,EAAiBD,EAAYX,cAAc,gBACjDY,EAAeP,SAAWG,EAC1BI,EAAeC,eAAiBL,IAAgBE,C,CAyBlDI,gBAAAA,GAIE,GAH6BxB,MAAMC,KACjCb,KAAKtB,GAAG6C,iBAAiB,iBACzBc,MAAM/C,GAAOA,EAAGgD,oBACQ,CACxB,MAAMJ,EAAiBlC,KAAKtB,GAAG4C,cAC7B,8BAEEY,IACFA,EAAeI,mBAAoB,E,EAKzCC,MAAAA,GACE,MAAMC,GAAK3D,EAAAA,EAAAA,GAAc,CAAC,aAE1B,OACE4D,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2CACHC,MAAOJ,EACPK,KAAK,SACLC,MAAO,CAELC,OAAQ,qDAGVN,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMK,KAAK,aACXP,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKM,KAAK,mBAAmBL,MAAM,+BACjCH,EAAAA,EAAAA,GAAA,SAAAE,IAAA,2CAAOM,KAAK,QAAQC,IAAMxE,GAAQsB,KAAKmD,SAAWzE,IAChD+D,EAAAA,EAAAA,GAAA,QAAAE,IAAA,+C,wCDpKO,8/G","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/closest.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-table/ld-table.css?tag=ld-table&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-table/ld-table.tsx"],"sourcesContent":["// This helper function is similar to Element.closest(),\n// however it also traverses shadow DOM boundaries.\nexport const closest = (selector: string, el: Element | Document) => {\n  return (\n    el &&\n    (('closest' in el && el.closest(selector)) ||\n      closest(selector, (el.getRootNode() as unknown as ShadowRoot).host))\n  )\n}\n","/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",":host,\n.ld-table {\n  /* colors */\n  --ld-table-bg-col: var(--ld-col-wht);\n  --ld-table-border-col: var(--ld-col-neutral-200);\n  --ld-table-toolbar-bg-col: var(--ld-col-neutral-050);\n\n  /* layout */\n  --ld-table-layout: auto;\n  --ld-table-row-outline-width: var(--ld-sp-1);\n  --ld-table-row-outline: var(--ld-table-row-outline-width)\n    var(--ld-table-border-col) solid;\n  --ld-table-row-outline-half: calc(0.5 * var(--ld-table-row-outline-width))\n    var(--ld-table-border-col) solid;\n  --ld-table-cell-padding-x: var(--ld-sp-16);\n  --ld-table-cell-padding-y: var(--ld-sp-12);\n  --ld-table-toolbar-padding-y: var(--ld-sp-16);\n  --ld-table-typo: var(--ld-typo-h6);\n  --ld-table-white-space: nowrap;\n\n  /* The table head gradient fixes the position sticky quirk with Safari by using background-image. */\n  /* Note that 0.75 is a special width that works well in all browsers. */\n  --ld-table-head-gradient: linear-gradient(\n    to top,\n    var(--ld-table-border-col),\n    var(--ld-table-border-col) calc(var(--ld-sp-1) * 0.75),\n    var(--ld-table-bg-col) calc(var(--ld-sp-1) * 0.75),\n    var(--ld-table-bg-col)\n  );\n\n  --ld-table-selection-wrapper-border-width-top: calc(var(--ld-sp-1) * 0.5);\n  --ld-table-selection-wrapper-border-width-bottom: calc(var(--ld-sp-1) * 0.5);\n\n  /* Fix for Safari overflow hidden with border radius quirk. */\n  -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n  background-color: var(--ld-table-border-col);\n  border-radius: var(--ld-br-l);\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  font: var(--ld-table-typo);\n  overflow: hidden;\n  position: relative;\n\n  table {\n    background-color: var(--ld-table-bg-col);\n    border-collapse: collapse;\n    table-layout: var(--ld-table-layout);\n    text-align: left;\n    width: 100%;\n    white-space: var(--ld-table-white-space);\n  }\n\n  tbody,\n  thead,\n  td,\n  th {\n    background-color: inherit;\n    font: inherit;\n  }\n\n  .ld-table__toolbar,\n  ::slotted(ld-table-toolbar) {\n    align-items: center;\n    background-color: var(--ld-table-toolbar-bg-col);\n    border-top-left-radius: calc(var(--ld-br-l) - 1.25 * var(--ld-sp-1));\n    border-top-right-radius: calc(var(--ld-br-l) - 1.25 * var(--ld-sp-1));\n    box-sizing: border-box;\n    display: flex;\n    gap: var(--ld-sp-12);\n    justify-content: flex-start;\n    min-height: var(--ld-sp-40);\n    overflow: auto hidden;\n    padding-inline: var(--ld-table-cell-padding-x);\n    position: relative;\n    white-space: nowrap;\n    z-index: 3;\n\n    > ld-pagination {\n      flex-shrink: 0;\n      padding-bottom: var(--ld-sp-8);\n      padding-top: var(--ld-sp-4);\n      overflow-x: hidden;\n      transform: translateY(var(--ld-sp-2));\n\n      &:first-child {\n        margin-left: calc(-1 * var(--ld-sp-8));\n      }\n      &:last-child {\n        margin-right: calc(-1 * var(--ld-sp-8));\n      }\n    }\n  }\n\n  .ld-table__toolbar,\n  ::slotted(ld-table-toolbar),\n  thead {\n    outline: var(--ld-table-row-outline);\n  }\n\n  tr {\n    outline: var(--ld-table-row-outline-half);\n  }\n\n  td,\n  th {\n    padding-block: var(--ld-table-cell-padding-y);\n    padding-inline: var(--ld-table-cell-padding-x);\n  }\n\n  thead {\n    background-image: var(--ld-table-head-gradient);\n    position: sticky;\n    top: 0;\n    z-index: 2;\n  }\n}\n\n/* Increase specificity to overwrite Tailwind's preflight reset. */\n.ld-table.ld-table {\n  border: solid var(--ld-sp-1) var(--ld-table-border-col);\n}\n\n.ld-table__scroll-container {\n  height: inherit;\n  max-height: inherit;\n  overflow: auto;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n} from '@stencil/core'\nimport { getClassNames } from '../../utils/getClassNames'\nimport { closest } from '../../utils/closest'\n\n/**\n * @part scroll-container - the scroll-container wrapping the table element\n * @part table - the table element\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-table',\n  styleUrl: 'ld-table.css',\n  shadow: true,\n})\nexport class LdTable {\n  @Element() el: HTMLLdTableElement\n  tableRef: HTMLTableElement\n\n  // The following events is not used within the ld-table component itself.\n  // Their only purpose is to create type definitions on the ld-table component,\n  // in order to be able to add inline listeners in TSX, for listening\n  // on the events bubling up from ld-table-* sub-components.\n\n  /** Emitted from ld-table-header with culumn index and sort order. */\n  @Event() ldTableSort: EventEmitter<{\n    columnIndex: number\n    sortOrder: 'asc' | 'desc'\n  }>\n\n  /** Emitted from ld-table-row with row index and selected state. */\n  @Event() ldTableSelect: EventEmitter<{\n    rowIndex: number\n    selected: boolean\n  }>\n\n  /** Emitted from ld-table-row with selected state. */\n  @Event() ldTableSelectAll: EventEmitter<{\n    selected: boolean\n  }>\n\n  @Listen('ldTableSort')\n  handleTableSort(\n    ev: CustomEvent<{\n      columnIndex: number\n      sortOrder?: 'asc' | 'desc'\n    }>\n  ) {\n    const ldTableHeader = closest('ld-table-header', ev.target as HTMLElement)\n    Array.from(ldTableHeader.parentNode.children).forEach(\n      (th: HTMLLdTableHeaderElement, index) => {\n        if (index !== ev.detail.columnIndex) {\n          th.resetSort()\n        }\n      }\n    )\n\n    if (ev.defaultPrevented) return\n\n    const ldTableBody = this.el.querySelector('ld-table-body')\n    Array.from(ldTableBody.querySelectorAll('ld-table-row'))\n      .sort(this.getComparer(ev.detail.columnIndex, ev.detail.sortOrder))\n      .forEach((tr) => ldTableBody.appendChild(tr))\n  }\n\n  @Listen('ldTableSelectAll')\n  handleTableSelectAll(\n    ev: CustomEvent<{\n      selected: boolean\n    }>\n  ) {\n    if (ev.defaultPrevented) return\n\n    // Select or deselect all.\n    const ldTableBody = this.el.querySelector('ld-table-body')\n    Array.from(ldTableBody.querySelectorAll('ld-table-row')).forEach(\n      (tr) => (tr.selected = ev.detail.selected)\n    )\n  }\n\n  @Listen('ldTableSelect')\n  async handleTableSelect(\n    ev: CustomEvent<{\n      selected: boolean\n    }>\n  ) {\n    if (ev.defaultPrevented) return\n\n    // Check if all are selected and update select all checkbox.\n    const ldTableBody = this.el.querySelector('ld-table-body')\n    const allRowsInTableBody = ldTableBody.querySelectorAll('ld-table-row')\n    const allSelected = Array.from(allRowsInTableBody).every(\n      (tr) => tr.selected\n    )\n    const noneSelected = Array.from(allRowsInTableBody).every(\n      (tr) => !tr.selected\n    )\n    const ldTableHead = this.el.querySelector('ld-table-head')\n    if (!ldTableHead) return\n\n    const firstRowInHead = ldTableHead.querySelector('ld-table-row')\n    firstRowInHead.selected = allSelected\n    firstRowInHead.indeterminate = !allSelected && !noneSelected\n  }\n\n  getCellValue = (tr: HTMLLdTableRowElement, columnIndex: number) =>\n    tr.children[columnIndex].textContent.trim()\n\n  getComparer =\n    (columnIndex: number, sortOrder: 'asc' | 'desc') =>\n    (tr1: HTMLLdTableRowElement, tr2: HTMLLdTableRowElement) => {\n      const str1 = this.getCellValue(\n        sortOrder === 'asc' ? tr1 : tr2,\n        columnIndex\n      )\n      const str2 = this.getCellValue(\n        sortOrder === 'asc' ? tr2 : tr1,\n        columnIndex\n      )\n      const num1 = parseFloat(str1.replaceAll(/,/g, ''))\n      const num2 = parseFloat(str2.replaceAll(/,/g, ''))\n      if (!isNaN(num1) && !isNaN(num2)) {\n        return num1 - num2\n      }\n      return str1.localeCompare(str2)\n    }\n\n  componentDidLoad() {\n    const hasSelectionDisabled = Array.from(\n      this.el.querySelectorAll('ld-table-row')\n    ).some((tr) => tr.selectionDisabled)\n    if (hasSelectionDisabled) {\n      const firstRowInHead = this.el.querySelector<HTMLLdTableRowElement>(\n        'ld-table-head ld-table-row'\n      )\n      if (firstRowInHead) {\n        firstRowInHead.selectionDisabled = true\n      }\n    }\n  }\n\n  render() {\n    const cl = getClassNames(['ld-table'])\n\n    return (\n      <Host\n        class={cl}\n        role=\"figure\"\n        style={{\n          // Increase specificity to overwrite Tailwind's preflight reset.\n          border: 'solid var(--ld-sp-1) var(--ld-table-border-col)',\n        }}\n      >\n        <slot name=\"toolbar\" />\n        <div part=\"scroll-container\" class=\"ld-table__scroll-container\">\n          <table part=\"table\" ref={(el) => (this.tableRef = el)}>\n            <slot />\n          </table>\n        </div>\n      </Host>\n    )\n  }\n}\n"],"names":["closest","selector","el","getRootNode","host","getClassNames","classNames","filter","className","join","LdTable","constructor","hostRef","getCellValue","tr","columnIndex","children","textContent","trim","getComparer","sortOrder","tr1","tr2","str1","this","str2","num1","parseFloat","replaceAll","num2","isNaN","localeCompare","handleTableSort","ev","ldTableHeader","target","Array","from","parentNode","forEach","th","index","detail","resetSort","defaultPrevented","ldTableBody","querySelector","querySelectorAll","sort","appendChild","handleTableSelectAll","selected","handleTableSelect","allRowsInTableBody","allSelected","every","noneSelected","ldTableHead","firstRowInHead","indeterminate","componentDidLoad","some","selectionDisabled","render","cl","h","Host","key","class","role","style","border","name","part","ref","tableRef"],"sourceRoot":""}