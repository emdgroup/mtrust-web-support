{"version":3,"file":"static/js/6405.0042d268.chunk.js","mappings":"iIAKaA,EAAiBC,GAC5BA,EAAWC,QAAQC,GAAcA,IAAWC,KAAK,I,gFCNnD,MCoBaC,EAAc,M,iKA8DjB,KAAAC,kBAAqBC,IAC3BC,KAAKC,iBAAmBF,EAAGG,OAAOC,MAClCH,KAAKI,qBAAqBC,KAAKN,EAAGG,OAAOC,MAAM,EAGzC,KAAAG,aAAgBP,IACtBA,EAAGQ,iBACH,MAAMJ,EAAQH,KAAKC,iBACnBD,KAAKC,iBAAmB,GACxBD,KAAKQ,qBAAqBH,KAAKF,EAAM,E,sKA9CnB,E,2JAoBA,E,kBACI,O,sBACI,G,gBACP,C,CA6BrBM,eAAAA,GACET,KAAKU,UAAYC,QACfX,KAAKY,YAAcZ,KAAKa,qBAAuBb,KAAKC,iB,CAKxDa,iBAAAA,GACEd,KAAKe,SAAWf,KAAKgB,GAAGC,UAAUC,SAAS,mB,CAI7CC,iBAAAA,CAAkBC,EAAkBC,GAClCrB,KAAKgB,GAAGC,UAAUK,OAAO,YAAYD,KACjCD,GAAUpB,KAAKgB,GAAGC,UAAUM,IAAI,YAAYH,I,CAIlDI,YAAAA,CAAaC,GACNA,GACHzB,KAAK0B,a,CAMT,wBAAMC,CAAmBC,GACvB5B,KAAK6B,aAAeD,C,CAKtB,iBAAMF,GACJ1B,KAAKC,iBAAmB,E,CAG1B6B,iBAAAA,GACE9B,KAAK+B,aAAe/B,KAAKgB,GAAGC,UAAUM,IAAIvB,KAAK+B,Y,CAGjDC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACLC,OAAQrC,KAAKe,SAAW,aAAe,aACvCuB,QAAStC,KAAKuC,SAAW,QAAU,UAGrCN,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEK,OAAOhD,EAAAA,EAAAA,GAAc,CACnB,mBACAQ,KAAKyC,UAAY,6BACjBzC,KAAKuC,UAAY,6BACjBvC,KAAKN,QAAU,2BACfM,KAAK0C,oBAAsB,iCAC3B1C,KAAKe,UAAY,2BACjBf,KAAK2C,MAAQ,qBAAqB3C,KAAK2C,SAEzCC,KAAK,UAEJ5C,KAAKN,SACJuC,EAAAA,EAAAA,GAAA,OAAKO,MAAM,uCACTP,EAAAA,EAAAA,GAAA,yBACiBjC,KAAK0C,wBAAqBG,EAAY,UAAS,aAClD7C,KAAKU,UAAYV,KAAK8C,sBAAmBD,EACrDE,KAAK,OACLC,YAAahD,KAAKiD,kBAClBT,MAAM,iCACNI,KAAK,yBACLM,QAASlD,KAAKF,oBAEfE,KAAKU,YACJuB,EAAAA,EAAAA,GAAA,aACEkB,QAASnD,KAAKM,aACdqC,KAAK,KACLH,MAAM,kCAAiC,aAC3BxC,KAAKoD,oBAEjBnB,EAAAA,EAAAA,GAAA,WACEO,MAAM,gCACNa,KAAK,eACLV,KAAK,OAELV,EAAAA,EAAAA,GAAA,OAAKqB,QAAQ,cAAcC,KAAK,SAC9BtB,EAAAA,EAAAA,GAAA,QACEuB,EAAE,yBACFC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,eAQ9BxB,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEK,MAAM,qCACNI,KAAK,4BAELX,EAAAA,EAAAA,GAAA,QAAAE,IAAA,8CACAF,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEK,MAAM,2BACNJ,MAAO,CAAER,OAAQ5B,KAAKe,SAAW,OAASf,KAAK6B,cAC/Ce,KAAK,a,mQD1Ma,kyF","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-select/ld-select-popper/ld-select-popper.shadow.css?tag=ld-select-popper&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-select/ld-select-popper/ld-select-popper.tsx"],"sourcesContent":["/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",":host {\n  /* layout */\n  --ld-select-popper-min-width: 12.8125rem;\n  --ld-select-popper-max-height: min(23.75rem, 75vh - 1.25rem);\n\n  /* colors */\n  --ld-select-popper-border-col: var(--ld-col-neutral-100);\n  min-width: var(--ld-select-popper-min-width);\n}\n\n.ld-select-popper {\n  min-width: 100%;\n\n  &:not(.ld-select-popper--expanded) {\n    display: none;\n  }\n\n  ::slotted(.ld-select__shadow) {\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    box-shadow: var(--ld-shadow-sticky);\n    border-radius: var(--ld-br-m);\n    pointer-events: none;\n    z-index: -1;\n  }\n}\n\n.ld-select-popper__scroll-container {\n  max-height: var(--ld-select-popper-max-height);\n  overflow-y: auto;\n  border-bottom-left-radius: var(--ld-br-m);\n  border-bottom-right-radius: var(--ld-br-m);\n  border-top: solid var(--ld-select-popper-border-col) var(--ld-sp-1);\n  overscroll-behavior: contain;\n\n  .ld-select-popper--detached:not(.ld-select-popper--filter) &,\n  .ld-select-popper--pinned:not(.ld-select-popper--filter) & {\n    border-top: 0;\n    border-radius: var(--ld-br-m);\n  }\n\n  .ld-select-popper--all-filtered & {\n    border-top: 0;\n  }\n}\n\n.ld-select-popper__shadow {\n  position: absolute;\n  width: 100%;\n  height: calc(100% + var(--ld-select-min-height-md));\n  box-shadow: var(--ld-shadow-sticky);\n  border-radius: var(--ld-br-m);\n  pointer-events: none;\n  z-index: -1;\n  bottom: 0;\n\n  .ld-select-popper--detached & {\n    height: 100% !important;\n  }\n}\n\n.ld-select-popper__filter-container {\n  align-items: center;\n  background-color: var(--ld-col-wht);\n  border-top: solid var(--ld-col-neutral-100) var(--ld-sp-1);\n  color: var(--ld-col-neutral-900);\n  display: grid;\n  font: var(--ld-typo-label-m);\n  grid-template-columns: 1fr auto;\n\n  .ld-select-popper--detached &,\n  .ld-select-popper--pinned & {\n    border-top: 0;\n    border-top-left-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n\n  .ld-select-popper--all-filtered & {\n    border-bottom-left-radius: var(--ld-br-m);\n    border-bottom-right-radius: var(--ld-br-m);\n  }\n}\n\n.ld-select-popper__create-button {\n  font: var(--ld-typo-label-s);\n  line-height: var(--ld-select-trigger-line-height);\n  margin-right: var(--ld-sp-8);\n\n  &::part(button) {\n    --ld-button-padding-x-sm: var(--ld-sp-6);\n    --ld-button-padding-y-sm: var(--ld-sp-4);\n    min-height: 0;\n    min-width: 0;\n  }\n}\n\n.ld-select-popper__filter-input {\n  appearance: none;\n  background-color: transparent;\n  border: 0;\n  box-sizing: border-box;\n  color: inherit;\n  font: inherit;\n  height: 2.5rem;\n  line-height: var(--ld-select-trigger-line-height);\n  outline: none;\n  padding: var(--ld-sp-8) var(--ld-sp-12);\n  width: 100%;\n\n  &::placeholder {\n    color: var(--ld-col-neutral-600);\n  }\n\n  .ld-select-popper--detached &,\n  .ld-select-popper--pinned & {\n    border-top: 0;\n    border-top-left-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\n\n/** @internal **/\n@Component({\n  tag: 'ld-select-popper',\n  styleUrl: 'ld-select-popper.shadow.css',\n  shadow: true,\n})\nexport class LdSelectPopper {\n  @Element() el: HTMLElement\n\n  /** Indicates that all options are filtered (used in creatable mode) */\n  @Prop() allOptionsFiltered?: boolean\n\n  /** A watcher is applied to the CSS class in order to be able to react to tether changes. */\n  @Prop({ reflect: true }) class?: string\n\n  /**\n   * Creatable mode can be enabled when the filter prop is set to true.\n   * This mode allows the user to create new options using the filter input field.\n   */\n  @Prop() creatable?: boolean\n\n  /** The \"create\" input label (creatable mode). */\n  @Prop() createInputLabel!: string\n\n  /** The \"create\" button label (creatable mode). */\n  @Prop() createButtonLabel!: string\n\n  /** Popper is visually detached from the select trigger element (there's a gap between the two). */\n  @Prop() detached?: boolean\n\n  /** Indicates if select element is expanded. */\n  @Prop() expanded? = false\n\n  /** Set this property to `true` in order to enable an input field for filtering options. */\n  @Prop() filter?: boolean\n\n  /** The filter input value matches an option (do not allow to create the option). */\n  @Prop() filterMatchesOption?: boolean\n\n  /** The filter input placeholder. */\n  @Prop() filterPlaceholder!: string\n\n  /** Attaches CSS class to the select popper element. */\n  @Prop() popperClass?: string\n\n  /** Size of the select trigger button (required for applying the correct shadow height). */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Since the select popper is located outside the select element, the theme needs to be applied as a prop. */\n  @Prop() theme?: string\n\n  @State() isPinned = false\n  @State() shadowHeight = '100%'\n  @State() filterInputValue = ''\n  @State() canCreate = false\n\n  /**\n   * @internal\n   * Emitted on filter change with the filter input value.\n   */\n  @Event() ldselectfilterchange: EventEmitter<string>\n\n  /**\n   * @internal\n   * Emitted on create button click in filter input field.\n   */\n  @Event() ldselectfiltercreate: EventEmitter<string>\n\n  private handleFilterInput = (ev) => {\n    this.filterInputValue = ev.target.value\n    this.ldselectfilterchange.emit(ev.target.value)\n  }\n\n  private handleCreate = (ev) => {\n    ev.preventDefault()\n    const value = this.filterInputValue\n    this.filterInputValue = ''\n    this.ldselectfiltercreate.emit(value)\n  }\n\n  @Watch('creatable')\n  @Watch('filterMatchesOption')\n  @Watch('filterInputValue')\n  updateCanCreate() {\n    this.canCreate = Boolean(\n      this.creatable && !this.filterMatchesOption && this.filterInputValue\n    )\n  }\n\n  @Watch('class')\n  updatePinnedState() {\n    this.isPinned = this.el.classList.contains('ld-tether-pinned')\n  }\n\n  @Watch('theme')\n  updatePopperTheme(newValue: string, oldValue: string) {\n    this.el.classList.remove(`ld-theme-${oldValue}`)\n    if (newValue) this.el.classList.add(`ld-theme-${newValue}`)\n  }\n\n  @Watch('expanded')\n  updateFilter(newExpanded: boolean) {\n    if (!newExpanded) {\n      this.resetFilter()\n    }\n  }\n\n  /** Updates shadow height */\n  @Method()\n  async updateShadowHeight(height: string) {\n    this.shadowHeight = height\n  }\n\n  /** Focuses the tab */\n  @Method()\n  async resetFilter() {\n    this.filterInputValue = ''\n  }\n\n  componentWillLoad() {\n    this.popperClass && this.el.classList.add(this.popperClass)\n  }\n\n  render() {\n    return (\n      <Host\n        style={{\n          zIndex: this.isPinned ? '2147483647' : '2147483646',\n          display: this.expanded ? 'block' : 'none',\n        }}\n      >\n        <div\n          class={getClassNames([\n            'ld-select-popper',\n            this.detached && 'ld-select-popper--detached',\n            this.expanded && 'ld-select-popper--expanded',\n            this.filter && 'ld-select-popper--filter',\n            this.allOptionsFiltered && 'ld-select-popper--all-filtered',\n            this.isPinned && 'ld-select-popper--pinned',\n            this.size && `ld-select-popper--${this.size}`,\n          ])}\n          part=\"popper\"\n        >\n          {this.filter && (\n            <div class=\"ld-select-popper__filter-container\">\n              <input\n                aria-haspopup={this.allOptionsFiltered ? undefined : 'listbox'}\n                aria-label={this.canCreate ? this.createInputLabel : undefined}\n                type=\"text\"\n                placeholder={this.filterPlaceholder}\n                class=\"ld-select-popper__filter-input\"\n                part=\"filter-input focusable\"\n                onInput={this.handleFilterInput}\n              />\n              {this.canCreate && (\n                <ld-button\n                  onClick={this.handleCreate}\n                  size=\"sm\"\n                  class=\"ld-select-popper__create-button\"\n                  aria-label={this.createButtonLabel}\n                >\n                  <ld-icon\n                    class=\"ld-select-popper__create-icon\"\n                    role=\"presentation\"\n                    size=\"sm\"\n                  >\n                    <svg viewBox=\"-1 -1 24 24\" fill=\"none\">\n                      <path\n                        d=\"M2.5 11h17M11 19.5v-17\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"3\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      />\n                    </svg>\n                  </ld-icon>\n                </ld-button>\n              )}\n            </div>\n          )}\n          <div\n            class=\"ld-select-popper__scroll-container\"\n            part=\"popper-scroll-container\"\n          >\n            <slot></slot>\n            <div\n              class=\"ld-select-popper__shadow\"\n              style={{ height: this.isPinned ? '100%' : this.shadowHeight }}\n              part=\"shadow\"\n            ></div>\n          </div>\n        </div>\n      </Host>\n    )\n  }\n}\n"],"names":["getClassNames","classNames","filter","className","join","LdSelectPopper","handleFilterInput","ev","this","filterInputValue","target","value","ldselectfilterchange","emit","handleCreate","preventDefault","ldselectfiltercreate","updateCanCreate","canCreate","Boolean","creatable","filterMatchesOption","updatePinnedState","isPinned","el","classList","contains","updatePopperTheme","newValue","oldValue","remove","add","updateFilter","newExpanded","resetFilter","updateShadowHeight","height","shadowHeight","componentWillLoad","popperClass","render","h","Host","key","style","zIndex","display","expanded","class","detached","allOptionsFiltered","size","part","undefined","createInputLabel","type","placeholder","filterPlaceholder","onInput","onClick","createButtonLabel","role","viewBox","fill","d","stroke"],"sourceRoot":""}