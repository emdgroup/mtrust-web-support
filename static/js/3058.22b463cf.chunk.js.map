{"version":3,"file":"static/js/3058.22b463cf.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/ariaDisabled.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/cloneAttributes.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/focus.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-button/ld-button.css?tag=ld-button&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-button/ld-button.tsx"],"sourcesContent":["// 'true', '1', 'yolo' etc. correspond to an aria disabled element, but not 'false'.\nexport const isAriaDisabled = (ariaDisabledValue: string | undefined) =>\n  ariaDisabledValue && ariaDisabledValue !== 'false'\n","function isFalsy(value: string | null | undefined) {\n  return value === undefined || value === null || value === 'false'\n}\n\nexport function cloneAttributes(attributesToIgnore: string[] = []) {\n  const attributesToIgnoreSet = new Set([\n    'style',\n    'id',\n    'class',\n    'slot',\n    'part',\n    ...attributesToIgnore,\n  ])\n\n  // Get attributes not in props.\n  const attributesToClone = {}\n  for (const attr of this.el.attributes) {\n    if (attributesToIgnoreSet.has(attr.name) || isFalsy(attr.value)) {\n      continue\n    }\n    const valueToClone = attr.value === '' ? true : attr.value\n    attributesToClone[attr.name] = valueToClone\n  }\n\n  // Update cloned attributes state.\n  this.clonedAttributes = attributesToClone\n\n  // Set up attributes observer.\n  const callback = (mutationsList) => {\n    // Update cloned attributes state.\n    for (const mutation of mutationsList) {\n      const { attributeName } = mutation\n      if (!attributesToIgnoreSet.has(attributeName)) {\n        const attrValue = this.el.getAttribute(attributeName)\n        if (isFalsy(attrValue)) {\n          delete this.clonedAttributes[attributeName]\n        } else {\n          this.clonedAttributes[attributeName] = attrValue\n        }\n      }\n    }\n\n    // Trigger state update.\n    this.clonedAttributes = { ...this.clonedAttributes }\n  }\n  const observer = new MutationObserver(callback)\n  observer.observe(this.el, {\n    subtree: false,\n    childList: false,\n    attributes: true,\n  })\n\n  return observer\n}\n","export const focusableSelector = [\n  'a[href]',\n  'area[href]',\n  'input:not([type=\"hidden\"]):not([type=\"radio\"]):not(:disabled)',\n  'input[type=\"radio\"]:not(:disabled)',\n  'select:not(:disabled)',\n  'textarea:not(:disabled)',\n  'button:not(:disabled)',\n  'iframe',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]',\n  '[tabindex]',\n]\n  .map((selector) => selector + ':not([tabindex^=\"-\"])')\n  .join(',')\n\nexport const getFirstFocusable = (el: HTMLElement): HTMLElement | undefined => {\n  // Directly focusable element.\n  if (el.matches(focusableSelector)) {\n    return el\n  }\n\n  // Slot.\n  if (el.tagName === 'SLOT') {\n    const hostEl = el.getRootNode()['host']\n    const slotName = el.getAttribute('name')\n    const slottedEl = slotName\n      ? hostEl.querySelector(`[slot=\"${el.getAttribute('name')}\"]`)\n      : Array.from(hostEl.children).find(\n          (child) => !(child as HTMLElement).hasAttribute('slot')\n        )\n    if (slottedEl) {\n      return getFirstFocusable(slottedEl)\n    }\n    return null\n  }\n\n  // Web Component.\n  if (el.shadowRoot) {\n    const shadowRootChildren = Array.from(el.shadowRoot.children)\n    for (const child of shadowRootChildren) {\n      const focusable = getFirstFocusable(child as HTMLElement)\n      if (focusable) return focusable\n    }\n  }\n\n  // Element with children.\n  const children = Array.from(el.children)\n  for (const child of children) {\n    const focusable = getFirstFocusable(child as HTMLElement)\n    if (focusable) return focusable\n  }\n\n  return null\n}\n\nexport const isInnerFocusable = <T extends object>(\n  element?: T\n): element is T & InnerFocusable => element && 'focusInner' in element\n\nlet autofocusHandlerTimeout\nexport const registerAutofocus = (autofocus: boolean) => {\n  if (!autofocus || autofocusHandlerTimeout) return\n  autofocusHandlerTimeout = setTimeout(() => {\n    const firstWithAutofocus = Array.from(\n      document.querySelectorAll<HTMLInputElement>('[autofocus]')\n    ).find((el) => !el.disabled)\n    if (isInnerFocusable(firstWithAutofocus)) {\n      firstWithAutofocus.focusInner()\n    }\n  }, 200)\n}\n\nexport const focusInnerOrFocus = (element: HTMLElement) => {\n  if (isInnerFocusable(element)) {\n    element.focusInner()\n  } else {\n    element.focus()\n  }\n}\n","/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",":host {\n  appearance: none !important; /* Safari browser reset */\n  display: inline-flex;\n\n  > :where(.ld-button) {\n    width: 100%;\n  }\n}\n\n:where(.ld-button) {\n  margin: 0; /* margin reset for Safari must have zero specificity! */\n}\n\n.ld-button {\n  --ld-button-border-top-left-radius: var(--ld-br-m);\n  --ld-button-border-top-right-radius: var(--ld-br-m);\n  --ld-button-border-bottom-right-radius: var(--ld-br-m);\n  --ld-button-border-bottom-left-radius: var(--ld-br-m);\n  --ld-button-icon-size-sm: 1rem;\n  --ld-button-icon-size-md: 1.25rem;\n  --ld-button-icon-size-lg: 1.5rem;\n  --ld-button-icon-margin-x-sm: -0.125rem;\n  --ld-button-icon-margin-x-md: -0.25rem;\n  --ld-button-icon-margin-x-lg: -0.5rem;\n  --ld-button-padding-x-sm: 0.625rem;\n  --ld-button-padding-y-sm: 0.5rem;\n  --ld-button-padding-x-md: 0.875rem;\n  --ld-button-padding-y-md: 0.625rem;\n  --ld-button-padding-x-lg: 1.3125rem;\n  --ld-button-padding-y-lg: 0.75rem;\n  --ld-button-gap-sm: 0.625rem;\n  --ld-button-gap-md: 0.875rem;\n  --ld-button-gap-lg: 1.1875rem;\n\n  /* colors */\n  --ld-button-bg-color: var(--ld-thm-primary);\n  --ld-button-text-color: var(--ld-col-wht);\n  --ld-button-progress-color: var(--ld-thm-secondary);\n  --ld-button-bg-color-focus: var(--ld-thm-primary-focus);\n  --ld-button-text-color-focus: var(--ld-thm-primary-active);\n  --ld-button-bg-color-hover: var(--ld-thm-primary-hover);\n  --ld-button-text-color-hover: var(--ld-col-wht);\n  --ld-button-bg-color-active: var(--ld-thm-primary-active);\n  --ld-button-text-color-active: var(--ld-col-wht);\n\n  /* brand */\n  --ld-button-brand-bg-color: var(--ld-col-wht);\n  --ld-button-brand-text-color: var(--ld-thm-primary);\n  --ld-button-brand-text-color-focus: var(--ld-thm-primary-focus);\n  --ld-button-brand-bg-color-hover: var(--ld-col-wht-alpha-high);\n  --ld-button-brand-bg-color-active: var(--ld-col-wht-alpha-medium);\n  --ld-button-secondary-brand-text-color: var(--ld-col-wht);\n  --ld-button-secondary-brand-progress-color: var(--ld-col-wht);\n  --ld-button-secondary-brand-text-color-focus: var(--ld-col-wht-alpha-high);\n  --ld-button-secondary-brand-progress-color-focus: var(\n    --ld-col-wht-alpha-high\n  );\n  --ld-button-secondary-brand-bg-color-hover: var(--ld-col-wht-alpha-low);\n  --ld-button-secondary-brand-bg-color-active: var(--ld-col-wht-alpha-lowest);\n  --ld-button-secondary-brand-text-color-active: var(\n    --ld-col-wht-alpha-highest\n  );\n  --ld-button-secondary-brand-progress-color-active: var(\n    --ld-col-wht-alpha-highest\n  );\n\n  /* ghost */\n  --ld-button-ghost-bg-color-active: var(--ld-thm-primary-alpha-low);\n  --ld-button-ghost-bg-color-hover: var(--ld-thm-primary-alpha-lowest);\n  --ld-button-ghost-progress-color: var(--ld-thm-primary);\n  --ld-button-ghost-progress-color-active: var(--ld-thm-primary-active);\n  --ld-button-ghost-progress-color-focus: var(--ld-thm-primary-focus);\n  --ld-button-ghost-progress-color-hover: var(--ld-thm-primary-hover);\n  --ld-button-ghost-progress-track-color: var(--ld-thm-primary-alpha-low);\n  --ld-button-ghost-text-color: var(--ld-thm-primary);\n  --ld-button-ghost-text-color-active: var(--ld-thm-primary-active);\n  --ld-button-ghost-text-color-focus: var(--ld-thm-primary-focus);\n  --ld-button-ghost-text-color-hover: var(--ld-thm-primary-hover);\n\n  /* highlight */\n  --ld-button-highlight-bg-color: var(--ld-thm-warning);\n  --ld-button-highlight-text-color: var(--ld-thm-warning-active);\n  --ld-button-highlight-progress-color: var(--ld-thm-warning-active);\n  --ld-button-highlight-bg-color-focus: var(--ld-thm-warning-focus);\n  --ld-button-highlight-bg-color-hover: var(--ld-thm-warning-hover);\n  --ld-button-highlight-bg-color-active: var(--ld-thm-warning-active);\n  --ld-button-highlight-text-color-active: var(--ld-thm-warning-hover);\n  --ld-button-highlight-progress-active: var(--ld-thm-warning-hover);\n\n  /* danger */\n  --ld-button-danger-bg-color: var(--ld-thm-error);\n  --ld-button-danger-text-color: var(--ld-col-wht);\n  --ld-button-danger-progress-color: var(--ld-thm-error-hover);\n  --ld-button-danger-bg-color-focus: var(--ld-thm-error-focus);\n  --ld-button-danger-progress-color-focus: var(--ld-thm-error-active);\n  --ld-button-danger-bg-color-hover: var(--ld-thm-error-hover);\n  --ld-button-danger-text-color-focus: var(\n    --ld-button-danger-color-focus,\n    var(--ld-thm-error-active)\n  );\n  --ld-button-danger-text-color-hover: var(--ld-col-wht);\n  --ld-button-danger-progress-color-hover: var(--ld-thm-error);\n  --ld-button-danger-bg-color-active: var(--ld-thm-error-active);\n  --ld-button-danger-text-color-active: var(--ld-col-wht);\n  --ld-button-danger-progress-color-active: var(--ld-thm-error);\n\n  /* danger-ghost */\n  --ld-button-danger-ghost-brand-bg-color: var(\n    --ld-button-danger-secondary-bg-color,\n    var(--ld-col-wht)\n  );\n  --ld-button-danger-ghost-bg-color-active: var(\n    --ld-button-danger-secondary-bg-color-active,\n    var(--ld-thm-error-alpha-low)\n  );\n  --ld-button-danger-ghost-bg-color-hover: var(\n    --ld-button-danger-secondary-bg-color-hover,\n    var(--ld-thm-error-alpha-lowest)\n  );\n  --ld-button-danger-ghost-text-color: var(\n    --ld-button-danger-secondary-text-color,\n    var(--ld-thm-error)\n  );\n  --ld-button-danger-ghost-text-color-active: var(\n    --ld-button-danger-secondary-text-color-active,\n    var(--ld-thm-error-active)\n  );\n  --ld-button-danger-ghost-text-color-focus: var(\n    --ld-button-danger-secondary-color-focus,\n    var(--ld-thm-error-focus)\n  );\n  --ld-button-danger-ghost-text-color-hover: var(\n    --ld-button-danger-secondary-text-color-hover,\n    var(--ld-thm-error-hover)\n  );\n  --ld-button-danger-ghost-progress-color: var(\n    --ld-button-danger-secondary-progress-color,\n    var(--ld-thm-error)\n  );\n  --ld-button-danger-ghost-progress-color-active: var(\n    --ld-button-danger-secondary-progress-color-active,\n    var(--ld-thm-error-active)\n  );\n  --ld-button-danger-ghost-progress-color-focus: var(\n    --ld-button-danger-secondary-progress-color-focus,\n    var(--ld-thm-error-focus)\n  );\n  --ld-button-danger-ghost-progress-color-hover: var(\n    --ld-button-danger-secondary-progress-color-hover,\n    var(--ld-thm-error-hover)\n  );\n\n  /* neutral */\n  --ld-button-neutral-bg-color: var(--ld-col-neutral);\n  --ld-button-neutral-bg-color-active: var(--ld-col-neutral-900);\n  --ld-button-neutral-bg-color-focus: var(--ld-col-neutral-400);\n  --ld-button-neutral-bg-color-hover: var(--ld-col-neutral-800);\n  --ld-button-neutral-progress-color: var(--ld-col-neutral-800);\n  --ld-button-neutral-progress-color-active: var(--ld-col-neutral);\n  --ld-button-neutral-progress-color-focus: var(--ld-col-neutral-900);\n  --ld-button-neutral-progress-color-hover: var(--ld-col-neutral);\n  --ld-button-neutral-text-color: var(--ld-col-wht);\n  --ld-button-neutral-text-color-active: var(--ld-col-wht);\n  --ld-button-neutral-text-color-focus: var(--ld-col-neutral-900);\n  --ld-button-neutral-text-color-hover: var(--ld-col-wht);\n\n  /* neutral-ghost */\n  --ld-button-neutral-ghost-brand-bg-color: var(--ld-col-wht);\n  --ld-button-neutral-ghost-bg-color-active: var(--ld-thm-primary-alpha-low);\n  --ld-button-neutral-ghost-bg-color-hover: var(--ld-col-neutral-050);\n  --ld-button-neutral-ghost-progress-color: var(--ld-col-neutral);\n  --ld-button-neutral-ghost-progress-color-active: var(--ld-col-neutral-900);\n  --ld-button-neutral-ghost-progress-color-focus: var(--ld-col-neutral-400);\n  --ld-button-neutral-ghost-progress-color-hover: var(--ld-col-neutral-800);\n  --ld-button-neutral-ghost-progress-track-color: var(--ld-col-neutral-050);\n  --ld-button-neutral-ghost-text-color: var(--ld-col-neutral);\n  --ld-button-neutral-ghost-text-color-active: var(--ld-col-neutral-900);\n  --ld-button-neutral-ghost-text-color-focus: var(--ld-col-neutral-400);\n  --ld-button-neutral-ghost-text-color-hover: var(--ld-col-neutral-800);\n\n  background-color: var(--ld-button-bg-color);\n  box-sizing: border-box;\n  position: relative;\n  font: var(--ld-typo-body-m);\n  border: 0;\n  overflow: hidden;\n  transform: translateZ(0); /* fixes overflow issue in Safari */\n  padding: var(--ld-button-padding-y-md) var(--ld-button-padding-x-md);\n  border-radius: var(--ld-button-border-top-left-radius)\n    var(--ld-button-border-top-right-radius)\n    var(--ld-button-border-bottom-right-radius)\n    var(--ld-button-border-bottom-left-radius);\n  min-height: 2.5rem;\n  min-width: 2.5rem;\n  text-decoration: none;\n  user-select: none;\n  touch-action: manipulation;\n  color: var(--ld-button-text-color);\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: var(--ld-button-gap-md);\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  font-weight: 700;\n  line-height: 1;\n  -webkit-touch-callout: none;\n\n  &:where(:disabled),\n  &:where(\n      [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n    ) {\n    opacity: 0.2;\n  }\n\n  &:where(\n      :not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    cursor: pointer;\n\n    &:where(:focus:focus-visible) {\n      background-color: var(--ld-button-bg-color-focus);\n      color: var(--ld-button-text-color-focus);\n    }\n    @media (hover: hover) {\n      &:where(:hover) {\n        background-color: var(--ld-button-bg-color-hover);\n        color: var(--ld-button-text-color-hover);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      background-color: var(--ld-button-bg-color-active);\n      color: var(--ld-button-text-color-active);\n    }\n  }\n\n  ::slotted(ld-icon),\n  ::slotted(.ld-icon),\n  > ld-icon,\n  > .ld-icon {\n    margin: auto var(--ld-button-icon-margin-x-md);\n  }\n\n  &:where(.ld-button--sm) {\n    min-height: 2rem;\n    min-width: 2rem;\n    padding: var(--ld-button-padding-y-sm) var(--ld-button-padding-x-sm);\n    font: var(--ld-typo-body-s);\n    font-weight: 700;\n    line-height: 1;\n    gap: var(--ld-button-gap-sm);\n\n    ::slotted(ld-icon),\n    ::slotted(.ld-icon),\n    > ld-icon,\n    > .ld-icon {\n      margin: auto var(--ld-button-icon-margin-x-sm);\n    }\n  }\n\n  &:where(.ld-button--lg) {\n    min-height: 3.125rem;\n    min-width: 3.125rem;\n    padding: var(--ld-button-padding-y-lg) var(--ld-button-padding-x-lg);\n    font: var(--ld-typo-body-l);\n    font-weight: 700;\n    line-height: 1;\n    gap: var(--ld-button-gap-lg);\n\n    ::slotted(ld-icon),\n    ::slotted(.ld-icon),\n    > ld-icon,\n    > .ld-icon {\n      margin: auto var(--ld-button-icon-margin-x-lg);\n    }\n  }\n\n  &:where(.ld-button--align-text-right) {\n    text-align: right;\n  }\n\n  &:where(.ld-button--align-text-left) {\n    text-align: left;\n  }\n\n  &:where(.ld-button--justify-start) {\n    justify-content: flex-start;\n  }\n\n  &:where(.ld-button--justify-end) {\n    justify-content: flex-end;\n  }\n\n  &:where(.ld-button--justify-between) {\n    justify-content: space-between;\n  }\n\n  &:where(.ld-button--icon-only) {\n    --ld-button-padding-x-sm: 0;\n    --ld-button-padding-y-sm: 0;\n    --ld-button-padding-x-md: 0;\n    --ld-button-padding-y-md: 0;\n    --ld-button-padding-x-lg: 0;\n    --ld-button-padding-y-lg: 0;\n  }\n\n  &[aria-busy='true'] {\n    cursor: progress;\n  }\n}\n\n@keyframes ld-button-progress-pending {\n  0% {\n    transform: translateX(-100%);\n    z-index: -1;\n  }\n  100% {\n    transform: translateX(100%);\n    z-index: -1;\n  }\n}\n\n.ld-button__progress {\n  --ld-button-progress: 0;\n  position: absolute;\n  inset: auto 0 0;\n  z-index: -1;\n\n  &::after {\n    background-color: var(--ld-button-progress-color);\n    content: '';\n    display: block;\n    height: var(--ld-sp-4);\n    transform: translateX(-100%)\n      translateX(calc(var(--ld-button-progress) * 100%));\n    transition: transform var(--ld-transition-duration-normal) ease;\n  }\n\n  &--pending {\n    &::after {\n      animation: ld-button-progress-pending 1s linear infinite;\n    }\n  }\n}\n\n.ld-button--secondary,\n.ld-button--ghost {\n  --ld-button-bg-color: transparent;\n  --ld-button-bg-color-active: var(--ld-button-ghost-bg-color-active);\n  --ld-button-bg-color-focus: transparent;\n  --ld-button-bg-color-hover: var(--ld-button-ghost-bg-color-hover);\n  --ld-button-text-color: var(--ld-button-ghost-text-color);\n  --ld-button-text-color-active: var(--ld-button-ghost-text-color-active);\n  --ld-button-text-color-focus: var(--ld-button-ghost-text-color-focus);\n  --ld-button-text-color-hover: var(--ld-button-ghost-text-color-hover);\n  --ld-button-progress-color: var(--ld-button-ghost-progress-color);\n\n  &:where(\n      :not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    &:where(:focus:focus-visible) .ld-button__progress::after {\n      background-color: var(--ld-button-ghost-progress-color-focus);\n    }\n\n    @media (hover: hover) {\n      &:where(:hover) .ld-button__progress::after {\n        background-color: var(--ld-button-ghost-progress-color-hover);\n      }\n    }\n\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      .ld-button__progress::after {\n        background-color: var(--ld-button-ghost-progress-color-active);\n      }\n    }\n  }\n}\n\n.ld-button--secondary {\n  box-shadow: inset 0 0 0 2px;\n}\n\n.ld-button--ghost {\n  .ld-button__progress {\n    background-color: var(--ld-button-ghost-progress-track-color);\n  }\n\n  @media (hover: hover) {\n    &:where(:hover) {\n      .ld-button__progress {\n        background-color: transparent;\n      }\n    }\n  }\n  &:where(:active),\n  &:where(:active:focus-visible) {\n    .ld-button__progress {\n      background-color: transparent;\n    }\n  }\n}\n\n.ld-button--brand-color {\n  &:where(\n      :not(\n          .ld-button--danger,\n          .ld-button--danger-secondary,\n          .ld-button--danger-ghost,\n          .ld-button--highlight,\n          .ld-button--neutral,\n          .ld-button--neutral-secondary,\n          .ld-button--neutral-ghost\n        )\n    ) {\n    &:where(:not(.ld-button--secondary, .ld-button--ghost)) {\n      background-color: var(--ld-button-brand-bg-color);\n      color: var(--ld-button-brand-text-color);\n\n      &:where(\n          &:not(\n              :disabled,\n              [aria-disabled]:where(\n                  :not([aria-disabled=''], [aria-disabled='false'])\n                )\n            )\n        ) {\n        &:where(:focus:focus-visible) {\n          color: var(--ld-button-brand-text-color-focus);\n        }\n        @media (hover: hover) {\n          &:where(:hover) {\n            background-color: var(--ld-button-brand-bg-color-hover);\n          }\n        }\n        &:where(:active),\n        &:where(:active:focus-visible) {\n          background-color: var(--ld-button-brand-bg-color-active);\n        }\n      }\n    }\n\n    &.ld-button--secondary,\n    &.ld-button--ghost {\n      --ld-button-ghost-bg-color-active: var(\n        --ld-button-secondary-brand-bg-color-active\n      );\n      --ld-button-ghost-bg-color-hover: var(\n        --ld-button-secondary-brand-bg-color-hover\n      );\n      --ld-button-ghost-text-color: var(--ld-button-secondary-brand-text-color);\n      --ld-button-ghost-text-color-active: var(\n        --ld-button-secondary-brand-text-color-active\n      );\n      --ld-button-ghost-text-color-focus: var(\n        --ld-button-secondary-brand-text-color-focus\n      );\n      --ld-button-ghost-text-color-hover: var(\n        --ld-button-secondary-brand-text-color\n      );\n      --ld-button-ghost-progress-color: var(\n        --ld-button-secondary-brand-progress-color\n      );\n      --ld-button-ghost-progress-color-active: var(\n        --ld-button-secondary-brand-progress-color-active\n      );\n      --ld-button-ghost-progress-color-focus: var(\n        --ld-button-secondary-brand-progress-color-focus\n      );\n      --ld-button-ghost-progress-color-hover: var(\n        --ld-button-secondary-brand-progress-color\n      );\n    }\n  }\n}\n\n.ld-button--highlight {\n  --ld-button-bg-color: var(--ld-button-highlight-bg-color);\n  --ld-button-bg-color-active: var(--ld-button-highlight-bg-color-active);\n  --ld-button-bg-color-focus: var(--ld-button-highlight-bg-color-focus);\n  --ld-button-bg-color-hover: var(--ld-button-highlight-bg-color-hover);\n  --ld-button-text-color: var(--ld-button-highlight-text-color);\n  --ld-button-text-color-active: var(--ld-button-highlight-text-color-active);\n  --ld-button-text-color-focus: var(--ld-button-highlight-text-color);\n  --ld-button-text-color-hover: var(--ld-button-highlight-text-color);\n  --ld-button-progress-color: var(--ld-button-highlight-progress-color);\n\n  &:where(\n      :not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      .ld-button__progress::after {\n        background-color: var(--ld-button-highlight-progress-active);\n      }\n    }\n  }\n}\n\n.ld-button--danger {\n  --ld-button-bg-color: var(--ld-button-danger-bg-color);\n  --ld-button-bg-color-active: var(--ld-button-danger-bg-color-active);\n  --ld-button-bg-color-focus: var(--ld-button-danger-bg-color-focus);\n  --ld-button-bg-color-hover: var(--ld-button-danger-bg-color-hover);\n  --ld-button-text-color: var(--ld-button-danger-text-color);\n  --ld-button-text-color-active: var(--ld-button-danger-text-color-active);\n  --ld-button-text-color-hover: var(--ld-button-danger-text-color-hover);\n  --ld-button-text-color-focus: var(--ld-button-danger-text-color-focus);\n  --ld-button-progress-color: var(--ld-button-danger-progress-color);\n\n  &:where(\n      :not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    &:where(:focus:focus-visible) {\n      .ld-button__progress::after {\n        background-color: var(--ld-button-danger-progress-color-focus);\n      }\n    }\n    @media (hover: hover) {\n      &:where(:hover) {\n        .ld-button__progress::after {\n          background-color: var(--ld-button-danger-progress-color-hover);\n        }\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      .ld-button__progress::after {\n        background-color: var(--ld-button-danger-progress-color-active);\n      }\n    }\n  }\n}\n\n.ld-button--danger-secondary,\n.ld-button--danger-ghost {\n  --ld-button-bg-color-active: var(--ld-button-danger-ghost-bg-color-active);\n  --ld-button-bg-color-focus: var(--ld-button-danger-ghost-bg-color-focus);\n  --ld-button-bg-color-hover: var(--ld-button-danger-ghost-bg-color-hover);\n  --ld-button-text-color: var(--ld-button-danger-ghost-text-color);\n  --ld-button-text-color-active: var(\n    --ld-button-danger-ghost-text-color-active\n  );\n  --ld-button-text-color-focus: var(--ld-button-danger-ghost-text-color-focus);\n  --ld-button-text-color-hover: var(--ld-button-danger-ghost-text-color-hover);\n  --ld-button-progress-color: var(--ld-button-danger-ghost-progress-color);\n  --ld-button-ghost-progress-color-active: var(\n    --ld-button-danger-ghost-progress-color-active\n  );\n  --ld-button-ghost-progress-color-focus: var(\n    --ld-button-danger-ghost-progress-color-focus\n  );\n  --ld-button-ghost-progress-color-hover: var(\n    --ld-button-danger-ghost-progress-color-hover\n  );\n\n  &.ld-button--brand-color {\n    --ld-button-bg-color: var(--ld-button-danger-ghost-brand-bg-color);\n    --ld-button-bg-color-active: var(--ld-button-danger-ghost-brand-bg-color);\n    --ld-button-bg-color-focus: var(--ld-button-danger-ghost-brand-bg-color);\n    --ld-button-bg-color-hover: var(--ld-button-danger-ghost-brand-bg-color);\n  }\n}\n\n/* ---------- */\n\n.ld-button--neutral {\n  --ld-button-bg-color: var(--ld-button-neutral-bg-color);\n  --ld-button-bg-color-active: var(--ld-button-neutral-bg-color-active);\n  --ld-button-bg-color-focus: var(--ld-button-neutral-bg-color-focus);\n  --ld-button-bg-color-hover: var(--ld-button-neutral-bg-color-hover);\n  --ld-button-text-color: var(--ld-button-neutral-text-color);\n  --ld-button-text-color-active: var(--ld-button-neutral-text-color-active);\n  --ld-button-text-color-hover: var(--ld-button-neutral-text-color-hover);\n  --ld-button-text-color-focus: var(--ld-button-neutral-text-color-focus);\n  --ld-button-progress-color: var(--ld-button-neutral-progress-color);\n\n  &:where(\n      :not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    &:where(:focus:focus-visible) {\n      .ld-button__progress::after {\n        background-color: var(--ld-button-neutral-progress-color-focus);\n      }\n    }\n    @media (hover: hover) {\n      &:where(:hover) {\n        .ld-button__progress::after {\n          background-color: var(--ld-button-neutral-progress-color-hover);\n        }\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      .ld-button__progress::after {\n        background-color: var(--ld-button-neutral-progress-color-active);\n      }\n    }\n  }\n}\n\n.ld-button--neutral-secondary,\n.ld-button--neutral-ghost {\n  --ld-button-bg-color: transparent;\n  --ld-button-bg-color-active: var(--ld-button-neutral-ghost-bg-color-active);\n  --ld-button-bg-color-focus: transparent;\n  --ld-button-bg-color-hover: var(--ld-button-neutral-ghost-bg-color-hover);\n  --ld-button-text-color: var(--ld-button-neutral-ghost-text-color);\n  --ld-button-text-color-active: var(\n    --ld-button-neutral-ghost-text-color-active\n  );\n  --ld-button-text-color-focus: var(--ld-button-neutral-ghost-text-color-focus);\n  --ld-button-text-color-hover: var(--ld-button-neutral-ghost-text-color-hover);\n  --ld-button-progress-color: var(--ld-button-neutral-ghost-progress-color);\n  --ld-button-ghost-progress-color-active: var(\n    --ld-button-neutral-ghost-progress-color-active\n  );\n  --ld-button-ghost-progress-color-focus: var(\n    --ld-button-neutral-ghost-progress-color-focus\n  );\n  --ld-button-ghost-progress-color-hover: var(\n    --ld-button-neutral-ghost-progress-color-hover\n  );\n  --ld-button-ghost-progress-track-color: var(\n    --ld-button-neutral-ghost-progress-track-color\n  );\n\n  &.ld-button--brand-color {\n    --ld-button-bg-color: var(--ld-button-neutral-ghost-brand-bg-color);\n    --ld-button-bg-color-active: var(--ld-button-neutral-ghost-brand-bg-color);\n    --ld-button-bg-color-focus: var(--ld-button-neutral-ghost-brand-bg-color);\n    --ld-button-bg-color-hover: var(--ld-button-neutral-ghost-brand-bg-color);\n  }\n}\n","import { Component, Element, h, Method, Prop, State } from '@stencil/core'\nimport { getClassNames } from '../../utils/getClassNames'\nimport { cloneAttributes } from '../../utils/cloneAttributes'\nimport { registerAutofocus } from '../../utils/focus'\nimport { isAriaDisabled } from '../../utils/ariaDisabled'\n\ntype Mode =\n  | 'highlight'\n  | 'secondary'\n  | 'ghost'\n  | 'danger'\n  | 'danger-secondary'\n  | 'danger-ghost'\n  | 'neutral'\n  | 'neutral-secondary'\n  | 'neutral-ghost'\n\nconst modeMap = new Map([\n  ['danger', 'ld-button--danger'],\n  ['ghost', 'ld-button--ghost'],\n  ['highlight', 'ld-button--highlight'],\n  ['neutral', 'ld-button--neutral'],\n  ['secondary', 'ld-button--secondary'],\n  ['danger-ghost', 'ld-button--ghost ld-button--danger-ghost'],\n  ['danger-secondary', 'ld-button--secondary ld-button--danger-secondary'],\n  ['neutral-ghost', 'ld-button--ghost ld-button--neutral-ghost'],\n  ['neutral-secondary', 'ld-button--secondary ld-button--neutral-secondary'],\n])\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part button - Actual button or anchor element\n * @part progress-bar - Progress bar\n */\n@Component({\n  tag: 'ld-button',\n  styleUrl: 'ld-button.css',\n  shadow: true,\n})\nexport class LdButton implements InnerFocusable, ClonesAttributes {\n  @Element() el: HTMLElement\n  private button: HTMLAnchorElement | HTMLButtonElement\n\n  private attributesObserver: MutationObserver\n\n  /** Align text. */\n  @Prop({ mutable: true }) alignText?: 'left' | 'right'\n\n  /** Alternative disabled state that keeps element focusable */\n  @Prop() ariaDisabled: string\n\n  /** Automatically focus the form control when the page is loaded. */\n  @Prop({ reflect: true }) autofocus: boolean\n\n  // `onBrandColor` is not possible, as Stencil expects `on*` props to be events.\n  /** Style the button so that it looks good on the current theme's primary color. */\n  @Prop() brandColor?: boolean\n\n  /** Disabled state of the button. */\n  @Prop() disabled?: boolean\n\n  /** Causes the browser to treat the linked URL as a download. */\n  @Prop() download?: boolean | string\n\n  /** Associates the control with a form element. */\n  @Prop() form?: string\n\n  /** Overrides the `action` attribute of the button's form owner. */\n  @Prop() formaction?: HTMLButtonElement['formAction']\n\n  /** Overrides the `enctype` attribute of the button's form owner. */\n  @Prop() formenctype?: HTMLButtonElement['formEnctype']\n\n  /** Overrides the `method` attribute of the button's form owner. */\n  @Prop() formmethod?: HTMLButtonElement['formMethod']\n\n  /** Overrides the `novalidate` attribute of the button's form owner. */\n  @Prop() formnovalidate?: HTMLButtonElement['formNoValidate']\n\n  /** Overrides the `target` attribute of the button's form owner. */\n  @Prop() formtarget?: HTMLButtonElement['formTarget']\n\n  /**\n   * Transforms the button to an anchor element.\n   * See [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href)\n   * for more information on the `href` attribute.\n   */\n  @Prop() href?: string\n\n  /** Hints at the human language of the linked URL. */\n  @Prop() hreflang?: string\n\n  /** Justify content. */\n  @Prop({ mutable: true }) justifyContent?: 'start' | 'end' | 'between'\n\n  /** Tab index of the button. */\n  @Prop() ldTabindex?: number\n\n  /** Display mode. */\n  @Prop() mode?: Mode\n\n  /** Used to specify the name of the control. */\n  @Prop() name?: string\n\n  /** A space-separated list of URLs to ping on link follow. */\n  @Prop() ping?: string\n\n  /** Displays a progress bar at the bottom of the button. */\n  @Prop() progress?: 'pending' | number\n\n  /** A space-separated list of URLs to ping on link follow. */\n  @Prop() referrerpolicy?: string\n\n  /** Size of the button. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /**\n   * The `target` attributed can be used in conjunction with the `href` attribute.\n   * See [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\n   * for more information on the `target` attribute.\n   */\n  @Prop() target?: '_blank' | '_self' | '_parent' | '_top'\n\n  /** Specifies the default behavior of the button. */\n  @Prop() type?: 'button' | 'reset' | 'submit' = 'submit'\n\n  /** Defines the value associated with the button’s `name` when it’s submitted with the form data. */\n  @Prop() value?: string\n\n  /**\n   * Button contains only an icon and no text.\n   * @internal\n   */\n  @Prop({ mutable: true }) iconOnly?: boolean\n\n  @State() clonedAttributes\n\n  /**\n   * Sets focus on the button\n   */\n  @Method()\n  async focusInner() {\n    this.button?.focus()\n  }\n\n  connectedCallback() {\n    this.el.addEventListener('click', this.handleClick, {\n      capture: true,\n    })\n  }\n\n  disconnectedCallback() {\n    this.el.removeEventListener('click', this.handleClick, {\n      capture: true,\n    })\n    /* istanbul ignore if */\n    if (this.attributesObserver) this.attributesObserver.disconnect()\n  }\n\n  private clickHiddenButton() {\n    const button = document.createElement('button')\n\n    button.style.pointerEvents = 'none'\n    button.style.position = 'absolute'\n    button.style.visibility = 'hidden'\n\n    if (this.form) button.setAttribute('form', this.form)\n    if (this.formaction !== undefined) button.formAction = this.formaction\n    if (this.formenctype !== undefined) button.formEnctype = this.formenctype\n    if (this.formmethod !== undefined) button.formMethod = this.formmethod\n    if (this.formnovalidate !== undefined)\n      button.formNoValidate = this.formnovalidate\n    if (this.formtarget !== undefined) button.formTarget = this.formtarget\n    if (this.name !== undefined) button.name = this.name\n    if (this.type !== undefined) button.type = this.type\n    if (this.value !== undefined) button.value = this.value\n\n    this.el.parentNode.append(button)\n    button.click()\n    button.remove()\n  }\n\n  private handleClick = (ev: MouseEvent) => {\n    if (this.disabled || isAriaDisabled(this.el.ariaDisabled)) {\n      ev.preventDefault()\n      // Stopping propagation is important for clicks on child elements,\n      // because otherwise event handlers attached to the ld-button\n      // are still called (no matter if the event was prevented or not).\n      ev.stopPropagation()\n      return\n    }\n\n    if (!this.href && (this.type === 'reset' || this.type === 'submit')) {\n      setTimeout(() => {\n        if (!ev.defaultPrevented) {\n          const form = this.el.closest('form')\n          if (form || this.form) {\n            this.clickHiddenButton()\n          }\n        }\n      })\n    }\n  }\n\n  componentWillLoad() {\n    this.attributesObserver = cloneAttributes.call(this, [\n      'align-text',\n      'brand-color',\n      'justify-content',\n      'ld-tabindex',\n      'mode',\n      'progress',\n      'size',\n      this.type === 'submit' ? 'type' : undefined, // submit is default\n    ])\n\n    registerAutofocus(this.autofocus)\n\n    if (this.iconOnly !== undefined) {\n      return\n    }\n\n    const textInButton = this.el.textContent.trim()\n\n    if (!textInButton) {\n      this.iconOnly = true\n    }\n  }\n\n  render() {\n    const cl = getClassNames([\n      'ld-button',\n      this.alignText && `ld-button--align-text-${this.alignText}`,\n      this.brandColor && `ld-button--brand-color`,\n      this.iconOnly && `ld-button--icon-only`,\n      this.justifyContent && `ld-button--justify-${this.justifyContent}`,\n      this.mode && modeMap.get(this.mode),\n      this.size && `ld-button--${this.size}`,\n    ])\n\n    const Tag = this.href ? 'a' : 'button'\n\n    const hasProgress = this.progress !== undefined && this.progress !== null\n\n    const styleProgress = !isNaN(parseFloat(this.progress + ''))\n      ? { '--ld-button-progress': this.progress + '' }\n      : undefined\n    const clProgress = `ld-button__progress${\n      this.progress === 'pending' ? ' ld-button__progress--pending' : ''\n    }`\n\n    return (\n      <Tag\n        {...this.clonedAttributes}\n        href={this.href}\n        target={this.target}\n        aria-busy={hasProgress ? 'true' : undefined}\n        aria-disabled={\n          this.disabled || isAriaDisabled(this.el.ariaDisabled)\n            ? 'true'\n            : undefined\n        }\n        aria-live=\"polite\"\n        class={cl}\n        disabled={this.disabled}\n        part=\"button focusable\"\n        ref={(el: HTMLAnchorElement | HTMLButtonElement) => (this.button = el)}\n        rel={this.target === '_blank' ? 'noreferrer noopener' : undefined}\n        tabIndex={this.ldTabindex}\n        value={this.value}\n      >\n        <slot />\n        {hasProgress && (\n          <span\n            class={clProgress}\n            part=\"progress-bar\"\n            style={styleProgress}\n          ></span>\n        )}\n      </Tag>\n    )\n  }\n}\n"],"names":["isAriaDisabled","ariaDisabledValue","isFalsy","value","undefined","cloneAttributes","attributesToIgnoreSet","Set","arguments","length","attributesToClone","attr","this","el","attributes","has","name","valueToClone","clonedAttributes","observer","MutationObserver","mutationsList","mutation","attributeName","attrValue","getAttribute","Object","assign","observe","subtree","childList","focusableSelector","map","selector","join","getFirstFocusable","matches","tagName","hostEl","getRootNode","slottedEl","querySelector","Array","from","children","find","child","hasAttribute","shadowRoot","shadowRootChildren","focusable","isInnerFocusable","element","autofocusHandlerTimeout","registerAutofocus","autofocus","setTimeout","firstWithAutofocus","document","querySelectorAll","disabled","focusInner","focusInnerOrFocus","focus","getClassNames","classNames","filter","className","modeMap","Map","LdButton","handleClick","ev","ariaDisabled","preventDefault","stopPropagation","href","type","defaultPrevented","closest","form","clickHiddenButton","_a","button","connectedCallback","addEventListener","capture","disconnectedCallback","removeEventListener","attributesObserver","disconnect","createElement","style","pointerEvents","position","visibility","setAttribute","formaction","formAction","formenctype","formEnctype","formmethod","formMethod","formnovalidate","formNoValidate","formtarget","formTarget","parentNode","append","click","remove","componentWillLoad","call","iconOnly","textContent","trim","render","cl","alignText","brandColor","justifyContent","mode","get","size","Tag","hasProgress","progress","styleProgress","isNaN","parseFloat","clProgress","h","key","target","class","part","ref","rel","tabIndex","ldTabindex"],"sourceRoot":""}