{"version":3,"file":"static/js/3594.dbe55ef7.chunk.js","mappings":"yJAAA,MCUaA,EAAQ,M,kEAWnBC,UAAAA,CAAWC,GAGTC,KAAKC,WAAaD,KAAKC,WAAa,GAAK,SACzCD,KAAKE,KAAOH,EAAMI,OAASH,KAAKC,U,CAOlCG,WAAAA,CAAYL,GAGVC,KAAKK,YAAcL,KAAKK,YAAc,GAAK,SAC3CL,KAAKM,MAAQP,EAAMI,OAASH,KAAKK,W,CAGnCE,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,cAAAC,IAAA,6CACED,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CACEC,KAAK,SAAQ,YACH,SAAQ,gBACJ,MAAK,cACP,QAEXV,KAAKE,OAERM,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CACEC,KAAK,QAAO,YACF,SAAQ,gBACJ,MAAK,cACP,QAEXV,KAAKM,O,WDxDU,yB","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sr-live/ld-sr-live.shadow.css?tag=ld-sr-live&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sr-live/ld-sr-live.tsx"],"sourcesContent":[":host {\n  display: contents;\n}\n","import { Component, h, Listen, State } from '@stencil/core'\n\n/**\n * @virtualProp ref - reference to component\n */\n@Component({\n  tag: 'ld-sr-live',\n  styleUrl: 'ld-sr-live.shadow.css',\n  shadow: true,\n})\nexport class LdSrLive {\n  private infoSuffix: string\n  private alertSuffix: string\n\n  @State() info: string\n  @State() alert: string\n\n  @Listen('ldSrLiveInfo', {\n    target: 'window',\n    passive: true,\n  })\n  handleInfo(event: CustomEvent<string>) {\n    // MAGIC: the second “pseudo-empty” string contains a zero width space, which is required\n    // in order to repeat an alert message, without altering the printed message displayed on the screen.\n    this.infoSuffix = this.infoSuffix ? '' : '​'\n    this.info = event.detail + this.infoSuffix\n  }\n\n  @Listen('ldSrLiveAlert', {\n    target: 'window',\n    passive: true,\n  })\n  handleAlert(event: CustomEvent<string>) {\n    // MAGIC: the second “pseudo-empty” string contains a zero width space, which is required\n    // in order to repeat an alert message, without altering the printed message displayed on the screen.\n    this.alertSuffix = this.alertSuffix ? '' : '​'\n    this.alert = event.detail + this.alertSuffix\n  }\n\n  render() {\n    return (\n      <ld-sr-only>\n        <span\n          role=\"status\"\n          aria-live=\"polite\"\n          aria-relevant=\"all\"\n          aria-atomic=\"true\"\n        >\n          {this.info}\n        </span>\n        <span\n          role=\"alert\"\n          aria-live=\"polite\"\n          aria-relevant=\"all\"\n          aria-atomic=\"true\"\n        >\n          {this.alert}\n        </span>\n      </ld-sr-only>\n    )\n  }\n}\n"],"names":["LdSrLive","handleInfo","event","this","infoSuffix","info","detail","handleAlert","alertSuffix","alert","render","h","key","role"],"sourceRoot":""}