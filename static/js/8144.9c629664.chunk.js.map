{"version":3,"file":"static/js/8144.9c629664.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/ariaDisabled.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/cloneAttributes.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-switch/ld-switch-item/ld-switch-item.css?tag=ld-switch-item&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-switch/ld-switch-item/ld-switch-item.tsx"],"sourcesContent":["// 'true', '1', 'yolo' etc. correspond to an aria disabled element, but not 'false'.\nexport const isAriaDisabled = (ariaDisabledValue: string | undefined) =>\n  ariaDisabledValue && ariaDisabledValue !== 'false'\n","function isFalsy(value: string | null | undefined) {\n  return value === undefined || value === null || value === 'false'\n}\n\nexport function cloneAttributes(attributesToIgnore: string[] = []) {\n  const attributesToIgnoreSet = new Set([\n    'style',\n    'id',\n    'class',\n    'slot',\n    'part',\n    ...attributesToIgnore,\n  ])\n\n  // Get attributes not in props.\n  const attributesToClone = {}\n  for (const attr of this.el.attributes) {\n    if (attributesToIgnoreSet.has(attr.name) || isFalsy(attr.value)) {\n      continue\n    }\n    const valueToClone = attr.value === '' ? true : attr.value\n    attributesToClone[attr.name] = valueToClone\n  }\n\n  // Update cloned attributes state.\n  this.clonedAttributes = attributesToClone\n\n  // Set up attributes observer.\n  const callback = (mutationsList) => {\n    // Update cloned attributes state.\n    for (const mutation of mutationsList) {\n      const { attributeName } = mutation\n      if (!attributesToIgnoreSet.has(attributeName)) {\n        const attrValue = this.el.getAttribute(attributeName)\n        if (isFalsy(attrValue)) {\n          delete this.clonedAttributes[attributeName]\n        } else {\n          this.clonedAttributes[attributeName] = attrValue\n        }\n      }\n    }\n\n    // Trigger state update.\n    this.clonedAttributes = { ...this.clonedAttributes }\n  }\n  const observer = new MutationObserver(callback)\n  observer.observe(this.el, {\n    subtree: false,\n    childList: false,\n    attributes: true,\n  })\n\n  return observer\n}\n","/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",":host,\n.ld-switch-item {\n  position: relative;\n  display: inline-flex;\n\n  &:first-of-type {\n    border-bottom-left-radius: var(--ld-br-m);\n    border-top-left-radius: var(--ld-br-m);\n  }\n\n  &:last-of-type {\n    border-bottom-right-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n\n  input {\n    position: absolute;\n    width: var(--ld-sp-1);\n    height: var(--ld-sp-1);\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border-width: 0;\n\n    &:checked {\n      ~ .ld-switch-item__content {\n        background-color: var(\n          --ld-switch-item-bg-col-selected,\n          var(--ld-thm-primary)\n        );\n        color: var(--ld-switch-item-col-selected, var(--ld-col-wht));\n      }\n    }\n\n    &:where(:disabled),\n    &:where(\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      ) {\n      ~ .ld-switch-item__content {\n        opacity: 0.2;\n      }\n    }\n\n    &:where(:not(:disabled)):focus {\n      &:focus-visible {\n        ~ .ld-switch-item__content {\n          background-color: var(\n            --ld-switch-item-bg-col-focus,\n            var(--ld-thm-primary-focus)\n          );\n          color: var(--ld-switch-item-col-active, var(--ld-col-wht));\n          outline: var(--ld-switch-item-outline, auto);\n          /* stylelint-disable-next-line declaration-block-no-duplicate-properties */\n          outline: var(\n            --ld-switch-item-outline,\n            auto 5px -webkit-focus-ring-color\n          );\n          outline-offset: -2px;\n        }\n      }\n      &:not:focus-visible {\n        ~ .ld-switch-item__content {\n          outline: none;\n        }\n      }\n    }\n\n    &:where(\n        :not(\n            :disabled,\n            [aria-disabled]:where(\n                :not([aria-disabled=''], [aria-disabled='false'])\n              ),\n            [readonly]\n          )\n      ) {\n      ~ .ld-switch-item__content {\n        cursor: pointer;\n\n        @media (hover: hover) {\n          &:hover {\n            background-color: var(\n              --ld-switch-item-bg-col-hover,\n              var(--ld-thm-primary-hover)\n            );\n            color: var(--ld-switch-item-col-active, var(--ld-col-wht));\n          }\n        }\n      }\n\n      &:active,\n      &:active:focus-visible {\n        ~ .ld-switch-item__content {\n          background-color: var(\n            --ld-switch-item-bg-col-active,\n            var(--ld-thm-primary-active)\n          );\n          color: var(--ld-switch-item-col-active, var(--ld-col-wht));\n        }\n      }\n    }\n  }\n}\n\n.ld-switch-item__content {\n  align-items: center;\n  background-color: var(\n    --ld-switch-item-bg-col,\n    var(--ld-thm-primary-alpha-low)\n  );\n  border-radius: inherit;\n  color: var(--ld-switch-item-col, var(--ld-thm-primary));\n  display: inline-grid;\n  font: var(--ld-switch-font);\n  font-weight: 700;\n  gap: var(--ld-switch-item-gap);\n  grid-auto-flow: column;\n  height: 100%;\n  justify-content: var(--ld-switch-item-justify-content);\n  line-height: 1.25;\n  overflow: hidden;\n  padding: var(--ld-switch-item-padding-y) var(--ld-switch-item-padding-x);\n  text-align: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n\n  ::slotted(ld-icon),\n  ::slotted(.ld-icon),\n  > ld-icon,\n  > .ld-icon {\n    margin: auto var(--ld-switch-item-icon-margin-x);\n  }\n}\n\n.ld-switch-item__label {\n  overflow: hidden;\n  padding: auto var(--ld-switch-item-padding-x);\n  text-align: center;\n  text-overflow: ellipsis;\n\n  :host & {\n    display: none;\n  }\n\n  :host(.ld-switch-item--has-label) & {\n    display: block;\n  }\n}\n\n.ld-switch-item,\n:host label {\n  align-items: center;\n  border: 0;\n  background-clip: padding-box;\n  background-color: var(--ld-switch-item-label-bg-col);\n  display: inline-flex;\n  height: 100%;\n  margin: 0;\n}\n\n:host label {\n  border-radius: inherit;\n  width: 100%;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Method,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { cloneAttributes } from '../../../utils/cloneAttributes'\nimport { getClassNames } from '../../../utils/getClassNames'\nimport { isAriaDisabled } from '../../../utils/ariaDisabled'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part label-element - wrapping label element\n * @part input - the form input element\n * @part content - content container element\n * @part label - text label container containing the main slot\n */\n@Component({\n  tag: 'ld-switch-item',\n  styleUrl: 'ld-switch-item.css',\n  shadow: true,\n})\nexport class LdSwitchItem implements InnerFocusable, ClonesAttributes {\n  @Element() el: HTMLLdSwitchItemElement\n\n  private attributesObserver: MutationObserver\n\n  private input: HTMLInputElement\n  private hiddenInput: HTMLInputElement\n\n  /** Alternative disabled state that keeps element focusable */\n  @Prop({ reflect: true }) ariaDisabled: string\n\n  /** Indicates whether the switch item is selected. */\n  @Prop({ mutable: true }) checked? = false\n\n  /** Disabled state of the switch item. */\n  @Prop() disabled?: boolean\n\n  /**\n   * @internal\n   * Associates the control with a form element.\n   */\n  @Prop() form?: string\n\n  /**\n   * @internal\n   * Tab index of the input.\n   */\n  @Prop() ldTabindex?: number\n\n  /**\n   * @internal\n   * A string specifying a name for the input control. This name is submitted\n   * along with the control's value when the form data is submitted.\n   */\n  @Prop() name?: string\n\n  /**\n   * @internal\n   * The value is not editable.\n   */\n  @Prop({ reflect: true }) readonly?: boolean\n\n  /**\n   * @internal\n   * Set by the outer switch component marking input element as required.\n   */\n  @Prop() required?: boolean\n\n  /** The input value. */\n  @Prop() value?: string\n\n  @State() clonedAttributes\n  @State() hasLabel: boolean\n\n  /**\n   * @internal\n   * Emitted when the input value changed and the element loses focus.\n   */\n  @Event() ldswitchitemchange: EventEmitter<string>\n\n  /**\n   * @internal\n   * Emitted when the input receives focus.\n   */\n  @Event() ldswitchitemfocus: EventEmitter<string>\n\n  /** Sets focus on the switch item. */\n  @Method()\n  async focusInner() {\n    this.input.focus()\n  }\n\n  @Watch('checked')\n  @Watch('form')\n  @Watch('name')\n  @Watch('value')\n  updateHiddenInput() {\n    const outerForm = this.el.closest('form')\n    if (!this.hiddenInput && this.name && (outerForm || this.form)) {\n      this.createHiddenInput()\n    }\n\n    if (this.hiddenInput) {\n      if (!this.name) {\n        this.hiddenInput.remove()\n        this.hiddenInput = undefined\n        return\n      }\n\n      this.hiddenInput.name = this.name\n      this.hiddenInput.checked = this.checked\n\n      if (this.value) {\n        this.hiddenInput.value = this.value\n      } else {\n        this.hiddenInput.removeAttribute('value')\n      }\n\n      if (this.form) {\n        this.hiddenInput.setAttribute('form', this.form)\n      } else if (this.hiddenInput.getAttribute('form')) {\n        if (outerForm) {\n          this.hiddenInput.removeAttribute('form')\n        } else {\n          this.hiddenInput.remove()\n          this.hiddenInput = undefined\n        }\n      }\n    }\n  }\n\n  private createHiddenInput() {\n    this.hiddenInput = document.createElement('input')\n    this.hiddenInput.type = 'radio'\n    this.hiddenInput.style.visibility = 'hidden'\n    this.hiddenInput.style.position = 'absolute'\n    this.hiddenInput.style.pointerEvents = 'none'\n    this.el.appendChild(this.hiddenInput)\n  }\n\n  private handleKeyDown = (ev: KeyboardEvent) => {\n    switch (ev.key) {\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        ev.preventDefault()\n        this.focusAndSelect('prev')\n        return\n      case 'ArrowDown':\n      case 'ArrowRight':\n        ev.preventDefault()\n        this.focusAndSelect('next')\n    }\n  }\n\n  private handleClick = (ev: MouseEvent) => {\n    if (\n      this.checked ||\n      this.disabled ||\n      isAriaDisabled(this.ariaDisabled) ||\n      this.readonly\n    ) {\n      ev.preventDefault()\n      return\n    }\n\n    // Uncheck siblings.\n    Array.from(\n      this.el.parentElement.querySelectorAll('ld-switch-item')\n    ).forEach((ldSwitchItem) => {\n      ldSwitchItem.checked = false\n    })\n\n    this.checked = true\n\n    this.el.dispatchEvent(new InputEvent('change', { bubbles: true }))\n    this.ldswitchitemchange.emit(this.el.value)\n  }\n\n  private handleFocus = () => {\n    this.ldswitchitemfocus.emit()\n  }\n\n  private focusAndSelect(dir: 'next' | 'prev') {\n    const sibling = (\n      dir === 'next'\n        ? this.el.nextElementSibling\n        : this.el.previousElementSibling\n    ) as HTMLLdSwitchItemElement\n    if (sibling) {\n      sibling.focusInner()\n      sibling.click()\n    }\n  }\n\n  componentWillLoad() {\n    this.hasLabel = Array.from(this.el.childNodes).some(\n      (el: HTMLElement) =>\n        el.tagName !== 'LD-ICON' &&\n        !el.classList?.contains('ld-icon') &&\n        el.textContent.trim()\n    )\n\n    this.attributesObserver = cloneAttributes.call(this)\n  }\n\n  disconnectedCallback() {\n    // istanbul ignore if\n    if (this.attributesObserver) this.attributesObserver.disconnect()\n  }\n\n  render() {\n    const cl = getClassNames([\n      'ld-switch-item',\n      this.hasLabel && 'ld-switch-item--has-label',\n    ])\n\n    return (\n      <Host onClick={this.handleClick} class={cl}>\n        <label part=\"label-element\">\n          <input\n            type=\"radio\"\n            {...this.clonedAttributes}\n            part=\"input focusable\"\n            onKeyDown={this.handleKeyDown}\n            onFocus={this.handleFocus}\n            ref={(ref) => (this.input = ref)}\n            required={this.required}\n            disabled={this.disabled}\n            checked={this.checked}\n            tabIndex={this.checked ? this.ldTabindex : -1}\n          />\n          <span part=\"content\" class=\"ld-switch-item__content\">\n            <slot name=\"icon-start\" />\n            <span part=\"label\" class=\"ld-switch-item__label\">\n              <slot />\n            </span>\n            <slot name=\"icon-end\" />\n          </span>\n        </label>\n      </Host>\n    )\n  }\n}\n"],"names":["isAriaDisabled","ariaDisabledValue","isFalsy","value","undefined","cloneAttributes","attributesToIgnoreSet","Set","arguments","length","attributesToClone","attr","this","el","attributes","has","name","valueToClone","clonedAttributes","observer","MutationObserver","mutationsList","mutation","attributeName","attrValue","getAttribute","Object","assign","observe","subtree","childList","getClassNames","classNames","filter","className","join","LdSwitchItem","handleKeyDown","ev","key","preventDefault","focusAndSelect","handleClick","checked","disabled","ariaDisabled","readonly","Array","from","parentElement","querySelectorAll","forEach","ldSwitchItem","dispatchEvent","InputEvent","bubbles","ldswitchitemchange","emit","handleFocus","ldswitchitemfocus","focusInner","input","focus","updateHiddenInput","outerForm","closest","hiddenInput","form","createHiddenInput","remove","removeAttribute","setAttribute","document","createElement","type","style","visibility","position","pointerEvents","appendChild","dir","sibling","nextElementSibling","previousElementSibling","click","componentWillLoad","hasLabel","childNodes","some","tagName","_a","classList","contains","textContent","trim","attributesObserver","call","disconnectedCallback","disconnect","render","cl","h","Host","onClick","class","part","onKeyDown","onFocus","ref","required","tabIndex","ldTabindex"],"sourceRoot":""}