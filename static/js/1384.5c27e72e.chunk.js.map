{"version":3,"file":"static/js/1384.5c27e72e.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/ariaDisabled.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/cloneAttributes.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/focus.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-input/ld-input.tsx","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-input/ld-input.css?tag=ld-input&encapsulation=shadow"],"sourcesContent":["// 'true', '1', 'yolo' etc. correspond to an aria disabled element, but not 'false'.\nexport const isAriaDisabled = (ariaDisabledValue: string | undefined) =>\n  ariaDisabledValue && ariaDisabledValue !== 'false'\n","function isFalsy(value: string | null | undefined) {\n  return value === undefined || value === null || value === 'false'\n}\n\nexport function cloneAttributes(attributesToIgnore: string[] = []) {\n  const attributesToIgnoreSet = new Set([\n    'style',\n    'id',\n    'class',\n    'slot',\n    'part',\n    ...attributesToIgnore,\n  ])\n\n  // Get attributes not in props.\n  const attributesToClone = {}\n  for (const attr of this.el.attributes) {\n    if (attributesToIgnoreSet.has(attr.name) || isFalsy(attr.value)) {\n      continue\n    }\n    const valueToClone = attr.value === '' ? true : attr.value\n    attributesToClone[attr.name] = valueToClone\n  }\n\n  // Update cloned attributes state.\n  this.clonedAttributes = attributesToClone\n\n  // Set up attributes observer.\n  const callback = (mutationsList) => {\n    // Update cloned attributes state.\n    for (const mutation of mutationsList) {\n      const { attributeName } = mutation\n      if (!attributesToIgnoreSet.has(attributeName)) {\n        const attrValue = this.el.getAttribute(attributeName)\n        if (isFalsy(attrValue)) {\n          delete this.clonedAttributes[attributeName]\n        } else {\n          this.clonedAttributes[attributeName] = attrValue\n        }\n      }\n    }\n\n    // Trigger state update.\n    this.clonedAttributes = { ...this.clonedAttributes }\n  }\n  const observer = new MutationObserver(callback)\n  observer.observe(this.el, {\n    subtree: false,\n    childList: false,\n    attributes: true,\n  })\n\n  return observer\n}\n","export const focusableSelector = [\n  'a[href]',\n  'area[href]',\n  'input:not([type=\"hidden\"]):not([type=\"radio\"]):not(:disabled)',\n  'input[type=\"radio\"]:not(:disabled)',\n  'select:not(:disabled)',\n  'textarea:not(:disabled)',\n  'button:not(:disabled)',\n  'iframe',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]',\n  '[tabindex]',\n]\n  .map((selector) => selector + ':not([tabindex^=\"-\"])')\n  .join(',')\n\nexport const getFirstFocusable = (el: HTMLElement): HTMLElement | undefined => {\n  // Directly focusable element.\n  if (el.matches(focusableSelector)) {\n    return el\n  }\n\n  // Slot.\n  if (el.tagName === 'SLOT') {\n    const hostEl = el.getRootNode()['host']\n    const slotName = el.getAttribute('name')\n    const slottedEl = slotName\n      ? hostEl.querySelector(`[slot=\"${el.getAttribute('name')}\"]`)\n      : Array.from(hostEl.children).find(\n          (child) => !(child as HTMLElement).hasAttribute('slot')\n        )\n    if (slottedEl) {\n      return getFirstFocusable(slottedEl)\n    }\n    return null\n  }\n\n  // Web Component.\n  if (el.shadowRoot) {\n    const shadowRootChildren = Array.from(el.shadowRoot.children)\n    for (const child of shadowRootChildren) {\n      const focusable = getFirstFocusable(child as HTMLElement)\n      if (focusable) return focusable\n    }\n  }\n\n  // Element with children.\n  const children = Array.from(el.children)\n  for (const child of children) {\n    const focusable = getFirstFocusable(child as HTMLElement)\n    if (focusable) return focusable\n  }\n\n  return null\n}\n\nexport const isInnerFocusable = <T extends object>(\n  element?: T\n): element is T & InnerFocusable => element && 'focusInner' in element\n\nlet autofocusHandlerTimeout\nexport const registerAutofocus = (autofocus: boolean) => {\n  if (!autofocus || autofocusHandlerTimeout) return\n  autofocusHandlerTimeout = setTimeout(() => {\n    const firstWithAutofocus = Array.from(\n      document.querySelectorAll<HTMLInputElement>('[autofocus]')\n    ).find((el) => !el.disabled)\n    if (isInnerFocusable(firstWithAutofocus)) {\n      firstWithAutofocus.focusInner()\n    }\n  }, 200)\n}\n\nexport const focusInnerOrFocus = (element: HTMLElement) => {\n  if (isInnerFocusable(element)) {\n    element.focusInner()\n  } else {\n    element.focus()\n  }\n}\n","/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { cloneAttributes } from '../../utils/cloneAttributes'\nimport { getClassNames } from '../../utils/getClassNames'\nimport { registerAutofocus } from '../../utils/focus'\nimport { isAriaDisabled } from '../../utils/ariaDisabled'\n\n/**\n * The `ld-input` component. You can use it in conjunction with the `ld-label`\n * and the `ld-input-message` component. See examples in the docs for a better\n * understanding on how they can be used together.\n *\n * @slot start - The purpose of this slot is to add icons or buttons\n * to the input, __justifying the item to the end of the component__.\n * Styling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\n * If you choose to place something different into the slot, you will probably\n * need to adjust some styles on the slotted item in order to make it fit right.\n * @slot end - The purpose of this slot is to add icons or buttons\n * to the input, __justifying the item to the start of the component__.\n * Styling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\n * If you choose to place something different into the slot, you will probably\n * need to adjust some styles on the slotted item in order to make it fit right.\n * @virtualProp { FileList | undefined } files - Selected files for ld-input with type file (readonly).\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part input - Actual input/textarea element\n * @part placeholder - Placeholder rendered for input type \"file\"\n */\n@Component({\n  tag: 'ld-input',\n  styleUrl: 'ld-input.css',\n  shadow: true,\n})\nexport class LdInput implements InnerFocusable, ClonesAttributes {\n  @Element() el: HTMLInputElement | HTMLTextAreaElement\n\n  private attributesObserver: MutationObserver\n\n  private hiddenInput?: HTMLInputElement\n  private input: HTMLInputElement | HTMLTextAreaElement\n\n  /** Hint for expected file type in file upload controls. */\n  @Prop() accept?: string\n\n  /** Alternative disabled state that keeps element focusable */\n  @Prop() ariaDisabled: string\n\n  /** Hint for form autofill feature. */\n  @Prop({ mutable: true, reflect: true }) autocomplete?: string\n\n  /** Automatically focus the form control when the page is loaded. */\n  @Prop({ reflect: true }) autofocus: boolean\n\n  /** Media capture input method in file upload controls. */\n  @Prop() capture?: string\n\n  /** The number of columns. */\n  @Prop() cols?: number\n\n  /** Name of form field to use for sending the element's directionality in form submission. */\n  @Prop() dirname?: string\n\n  /** Whether the form control is disabled. */\n  @Prop() disabled?: boolean\n\n  /** Associates the control with a form element. */\n  @Prop() form?: string\n\n  /** Set this property to `true` in order to mark the field visually as invalid. */\n  @Prop() invalid?: boolean\n\n  /** Tab index of the input. */\n  @Prop() ldTabindex?: number\n\n  /** Value of the id attribute of the `<datalist>` of autocomplete options. */\n  @Prop() list?: string\n\n  /** Maximum value. */\n  @Prop() max?: string | number\n\n  /** Maximum length (number of characters) of `value`. */\n  @Prop() maxlength?: string | number\n\n  /** Minimum value. */\n  @Prop() min?: string | number\n\n  /** Minimum length (number of characters) of `value`. */\n  @Prop() minlength?: string | number\n\n  /**\n   * Uses textarea instead of input internally. Setting this attribute to true\n   * disables the attribute type and both slots.\n   */\n  @Prop() multiline?: boolean\n\n  /** Boolean. Whether to allow multiple values. */\n  @Prop() multiple?: boolean\n\n  /** Used to specify the name of the control. */\n  @Prop() name?: string\n\n  /** Pattern the `value` must match to be valid. */\n  @Prop() pattern?: string\n\n  /** The input placeholder. */\n  @Prop() placeholder?: string\n\n  /** The value is not editable. */\n  @Prop() readonly?: boolean\n\n  /** A value is required for the form to be submittable. */\n  @Prop() required?: boolean\n\n  /** Whether the multiline input is resizable, and if so, in which directions. */\n  @Prop() resize?: 'none' | 'both' | 'horizontal' | 'vertical' = 'both'\n\n  /** The number of rows. */\n  @Prop() rows?: number\n\n  /** Size of the input. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Incremental values that are valid. */\n  @Prop() step?: string\n\n  /** Input tone. Use `'dark'` on white backgrounds. Default is a light tone. */\n  @Prop() tone?: 'dark'\n\n  /** The input type. */\n  @Prop() type?: string\n\n  /** The input value. */\n  @Prop({ mutable: true }) value?: string\n\n  @State() clonedAttributes\n\n  /** Emitted when the input value changed and the element loses focus. */\n  @Event() ldchange: EventEmitter<string>\n\n  /** Emitted when the input value changed. */\n  @Event() ldinput: EventEmitter<string>\n\n  /**\n   * Sets focus on the input\n   */\n  @Method()\n  async focusInner() {\n    if (this.input !== undefined) {\n      this.input.focus()\n    }\n  }\n\n  @Watch('dirname')\n  @Watch('form')\n  @Watch('name')\n  @Watch('value')\n  updateHiddenInput() {\n    const outerForm = this.el.closest('form')\n    if (!this.hiddenInput && this.name && (outerForm || this.form)) {\n      this.createHiddenInput()\n    }\n\n    if (this.hiddenInput) {\n      if (this.dirname) {\n        this.hiddenInput.dirName = this.dirname\n      }\n\n      if (this.name) {\n        this.hiddenInput.name = this.name\n      } else if (this.hiddenInput.name) {\n        this.hiddenInput.remove()\n        this.hiddenInput = undefined\n        return\n      }\n\n      if (this.form) {\n        this.hiddenInput.setAttribute('form', this.form)\n      } else if (this.hiddenInput.getAttribute('form')) {\n        if (outerForm) {\n          this.hiddenInput.removeAttribute('form')\n        } else {\n          this.hiddenInput.remove()\n          this.hiddenInput = undefined\n          return\n        }\n      }\n\n      if (this.isInputTypeFile(this.input)) {\n        // Clone input field in shadow dom to hidden input field.\n        const clonedInput = this.input.cloneNode() as HTMLInputElement\n        clonedInput.style.display = 'none'\n        this.hiddenInput.replaceWith(clonedInput)\n        this.hiddenInput = clonedInput\n      } else {\n        // Update value.\n        if (this.value) {\n          this.hiddenInput.value = this.value\n        } else if (this.hiddenInput.value) {\n          this.hiddenInput.removeAttribute('value')\n        }\n      }\n    }\n  }\n\n  private createHiddenInput() {\n    this.hiddenInput = document.createElement('input')\n    this.hiddenInput.type = 'hidden'\n    this.el.appendChild(this.hiddenInput)\n  }\n\n  @Watch('size')\n  private updateIconAndButtonSize() {\n    this.el.querySelectorAll('ld-button').forEach((button) => {\n      if (this.size !== undefined) {\n        button.setAttribute('size', this.size)\n      } else {\n        button.removeAttribute('size')\n      }\n    })\n    this.el.querySelectorAll('.ld-button').forEach((button) => {\n      if (this.size === 'sm') {\n        button.classList.remove('ld-button--lg')\n        button.classList.add('ld-button--sm')\n      } else if (this.size === 'lg') {\n        button.classList.remove('ld-button--sm')\n        button.classList.add('ld-button--lg')\n      } else {\n        button.classList.remove('ld-button--sm', 'ld-button--lg')\n      }\n    })\n    this.el.querySelectorAll('ld-icon').forEach((icon) => {\n      if (this.size !== undefined) {\n        icon.setAttribute('size', this.size)\n      } else {\n        icon.removeAttribute('size')\n      }\n    })\n    this.el.querySelectorAll('.ld-icon').forEach((icon) => {\n      if (this.size === 'sm') {\n        icon.classList.remove('ld-icon--lg')\n        icon.classList.add('ld-icon--sm')\n      } else if (this.size === 'lg') {\n        icon.classList.remove('ld-icon--sm')\n        icon.classList.add('ld-icon--lg')\n      } else {\n        icon.classList.remove('ld-icon--sm', 'ld-icon--lg')\n      }\n    })\n  }\n\n  componentWillLoad() {\n    // Add readonly prop files.\n    Object.defineProperty(this.el, 'files', {\n      get: () => {\n        if (this.isInputTypeFile(this.input)) {\n          return this.input.files\n        }\n        return undefined\n      },\n    })\n\n    this.attributesObserver = cloneAttributes.call(this, [\n      'multiline',\n      'autocomplete',\n      'value',\n    ])\n\n    const outerForm = this.el.closest('form')\n\n    if (outerForm && !this.autocomplete) {\n      this.autocomplete = outerForm.getAttribute('autocomplete')\n    }\n\n    if (this.name && (outerForm || this.form)) {\n      this.createHiddenInput()\n      this.hiddenInput.name = this.name\n\n      if (this.dirname) {\n        this.hiddenInput.dirName = this.dirname\n      }\n\n      if (this.form) {\n        this.hiddenInput.setAttribute('form', this.form)\n      }\n\n      if (this.value) {\n        this.hiddenInput.value = this.value\n      }\n    }\n\n    this.updateIconAndButtonSize()\n\n    registerAutofocus(this.autofocus)\n  }\n\n  private isInputTypeFile = (\n    input: HTMLInputElement | HTMLTextAreaElement\n  ): input is HTMLInputElement => {\n    return (input as HTMLInputElement).type === 'file'\n  }\n\n  private handleChange = (ev: InputEvent) => {\n    this.el.dispatchEvent(new InputEvent('change', ev))\n\n    this.ldchange.emit(this.value)\n  }\n\n  private handleInput = () => {\n    this.value = this.input.value\n\n    this.ldinput.emit(this.value)\n  }\n\n  private handleClick = (ev: MouseEvent) => {\n    const target = (\n      'composedPath' in ev ? ev.composedPath()[0] : ev['target']\n    ) as HTMLElement\n    if (this.el.disabled || isAriaDisabled(this.el.ariaDisabled)) {\n      ev.preventDefault()\n      return\n    }\n\n    if (target.closest('ld-button')) return\n\n    if (this.el.shadowRoot.activeElement !== this.input) {\n      this.input.focus()\n    }\n\n    if (target === this.el) {\n      this.input.dispatchEvent(new MouseEvent('click', { bubbles: false }))\n    }\n  }\n\n  private handleKeyDown = (ev: KeyboardEvent) => {\n    const outerForm = this.el.closest('form')\n    const formToSubmit = this.form\n      ? document.querySelector<HTMLFormElement>(`#${this.form}`) ?? outerForm\n      : outerForm\n\n    if (\n      isAriaDisabled(this.el.ariaDisabled) &&\n      !['ArrowLeft', 'ArrowRight', 'Tab'].includes(ev.key)\n    ) {\n      ev.preventDefault()\n    } else if (!this.multiline && ev.key === 'Enter' && formToSubmit) {\n      formToSubmit.requestSubmit()\n    }\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.attributesObserver) this.attributesObserver.disconnect()\n  }\n\n  render() {\n    const cl = getClassNames([\n      'ld-input',\n      this.disabled && `ld-input--disabled`,\n      this.size && `ld-input--${this.size}`,\n      this.tone && `ld-input--${this.tone}`,\n      this.invalid && 'ld-input--invalid',\n      this.multiline && this.resize && `ld-input--resize-${this.resize}`,\n    ])\n\n    if (this.multiline) {\n      const { type, ...clonedAttributesWithoutType } = this.clonedAttributes\n      return (\n        <Host class={cl} onClick={this.handleClick}>\n          <textarea\n            {...clonedAttributesWithoutType}\n            aria-disabled={\n              this.disabled || isAriaDisabled(this.ariaDisabled)\n                ? 'true'\n                : undefined\n            }\n            disabled={this.disabled}\n            readonly={this.readonly}\n            onChange={this.handleChange}\n            onInput={this.handleInput}\n            part=\"input focusable\"\n            ref={(el) => (this.input = el)}\n            tabIndex={this.ldTabindex}\n            value={this.value}\n          />\n          {type === 'file' && (\n            <span class=\"ld-input__placeholder\" part=\"placeholder\">\n              {this.input?.value || this.placeholder}\n            </span>\n          )}\n        </Host>\n      )\n    }\n\n    return (\n      <Host class={cl} onClick={this.handleClick}>\n        <slot name=\"start\"></slot>\n        <input\n          {...this.clonedAttributes}\n          aria-disabled={\n            this.disabled || isAriaDisabled(this.ariaDisabled)\n              ? 'true'\n              : undefined\n          }\n          autocomplete={this.autocomplete}\n          disabled={this.disabled}\n          onChange={this.handleChange}\n          onInput={this.handleInput}\n          onKeyDown={this.handleKeyDown}\n          part=\"input focusable\"\n          placeholder={this.placeholder}\n          readonly={this.readonly}\n          ref={(el) => (this.input = el)}\n          tabIndex={this.ldTabindex}\n          type={this.type}\n          value={this.value || undefined} // the undefined fixes negative number input in input of type number\n        />\n        {this.type === 'file' && (\n          <span class=\"ld-input__placeholder\" part=\"placeholder\">\n            {this.input?.value || this.placeholder}\n          </span>\n        )}\n        <slot name=\"end\"></slot>\n      </Host>\n    )\n  }\n}\n",":host > input [type='file'] {\n  pointer-events: none; /* important for Safari */\n}\n\n:host,\n.ld-input {\n  --ld-input-padding-x-sm: 0.5rem;\n  --ld-input-padding-x-md: 0.625rem;\n  --ld-input-padding-x-lg: 0.875rem;\n  --ld-input-padding-top-sm: 0.25rem;\n  --ld-input-padding-top-md: 0.625rem;\n  --ld-input-padding-top-lg: 0.625rem;\n  --ld-input-padding-bottom-sm: 0.25rem;\n  --ld-input-padding-bottom-md: 0.6875rem;\n  --ld-input-padding-bottom-lg: 0.6875rem;\n  --ld-input-min-height-sm: 2rem;\n  --ld-input-min-height-md: 2.5rem;\n  --ld-input-min-height-lg: 3.125rem;\n  --ld-input-max-height-sm: 2rem;\n  --ld-input-max-height-md: 2.5rem;\n  --ld-input-max-height-lg: 3.125rem;\n  --ld-input-time-min-width-sm: 5.125rem;\n  --ld-input-time-min-width-md: 6.25rem;\n  --ld-input-time-min-width-lg: 7.5rem;\n\n  /* colors */\n  --ld-input-bg-col-disabled: var(--ld-col-neutral-010);\n  --ld-input-bg-col-invalid-focus: var(--ld-col-wht);\n  --ld-input-bg-col-invalid: var(--ld-thm-error-disabled);\n  --ld-input-bg-col: var(--ld-col-wht);\n  --ld-input-border-col-disabled: var(--ld-col-neutral-100);\n  --ld-input-border-col-hover: var(--ld-col-neutral-300);\n  --ld-input-border-col: var(--ld-col-neutral-100);\n  --ld-input-icon-col-focus: var(--ld-thm-primary-focus);\n  --ld-input-icon-col-invalid-focus: var(--ld-thm-error-focus);\n  --ld-input-icon-col: var(--ld-thm-primary);\n  --ld-input-placeholder-opacity: 0.6;\n  --ld-input-text-col-disabled: var(--ld-col-neutral-300);\n  --ld-input-text-col-invalid-focus: var(--ld-col-neutral-900);\n  --ld-input-text-col-invalid: var(--ld-thm-error);\n  --ld-input-text-col: var(--ld-col-neutral-900);\n\n  /* mode colors */\n  --ld-input-dark-bg-col-focus: var(--ld-col-wht);\n  --ld-input-dark-bg-col: var(--ld-col-neutral-010);\n\n  cursor: text;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  background-color: var(--ld-input-bg-col);\n  color: var(--ld-input-text-col);\n  max-width: 100%;\n  border-radius: var(--ld-br-m);\n  line-height: 1;\n  min-height: var(--ld-input-min-height-md);\n\n  &::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    border-radius: var(--ld-br-m);\n    display: block;\n    pointer-events: none;\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-border-col);\n  }\n\n  :where(input) {\n    margin: 0; /* margin reset for Safari */\n  }\n\n  ::slotted(*),\n  > :where(:not(input, textarea)) {\n    user-select: none;\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='start']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='end']):first-child\n    ) {\n    margin-left: var(--ld-input-padding-x-md);\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='end']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='start']):last-child\n    ) {\n    margin-right: var(--ld-input-padding-x-md);\n  }\n\n  > input {\n    color: var(--ld-input-text-col);\n    align-self: stretch;\n    max-height: var(--ld-input-max-height-md);\n    -webkit-text-fill-color: var(--ld-input-text-col);\n\n    &[type='file'] {\n      opacity: 0;\n\n      &::-webkit-file-upload-button {\n        display: none;\n      }\n    }\n\n    &[type='number'] {\n      appearance: textfield;\n\n      &::-webkit-inner-spin-button,\n      &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n    }\n\n    &[type='search'] {\n      &::-webkit-search-decoration,\n      &::-webkit-search-cancel-button,\n      &::-webkit-search-results-button,\n      &::-webkit-search-results-decoration {\n        -webkit-appearance: none;\n      }\n    }\n\n    &::-webkit-calendar-picker-indicator {\n      cursor: pointer;\n      background: var(--ld-input-icon-col);\n      mask-repeat: no-repeat;\n      mask-position: center;\n      outline: none;\n\n      &:focus:focus-visible {\n        background: var(--ld-input-icon-col-focus);\n      }\n    }\n    /* custom icon calendar-picker */\n    &[type='datetime-local']::-webkit-calendar-picker-indicator,\n    &[type='date']::-webkit-calendar-picker-indicator {\n      mask-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M2 6v9.69c0 .65.28.93.48 1.01C3.8 17.26 6.24 18 10 18s6.2-.74 7.52-1.3c.2-.08.48-.36.48-1.01V6H2zM3.08.53A3.68 3.68 0 000 4.24V15.7c0 1.22.57 2.37 1.7 2.85C3.25 19.2 5.96 20 10 20c4.03 0 6.74-.8 8.3-1.46 1.13-.48 1.7-1.63 1.7-2.85V4.24a3.68 3.68 0 00-3.08-3.7C15.12.25 12.68 0 10 0 7.32 0 4.88.26 3.08.53zM8.25 8.5c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2zm5.5-.5a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h2.5a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2.5zm-10.5.5c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2zm5.5 3.75a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h2.5a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2.5zm-5.5.5c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2z\" clip-rule=\"evenodd\"/></svg>');\n      transform: translateY(4%);\n    }\n    /* custom icon calendar-picker */\n    &[type='time'] {\n      min-width: var(--ld-input-time-min-width-md);\n\n      &::-webkit-calendar-picker-indicator {\n        mask-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke=\"currentColor\" stroke-width=\"2\" d=\"M3 6.24c0-1.39.94-2.53 2.23-2.72C6.99 3.26 9.38 3 12 3c2.62 0 5 .26 6.77.52A2.68 2.68 0 0121 6.24V17.7c0 .93-.43 1.65-1.08 1.93C18.47 20.24 15.9 21 12 21c-3.9 0-6.47-.76-7.92-1.38-.65-.28-1.08-1-1.08-1.93V6.24z\"/><path fill=\"currentColor\" d=\"M11 3.5c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-2zM11 18.5c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-2zM5.5 11c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5v-1c0-.28.22-.5.5-.5h2zM20.5 11c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5v-1c0-.28.22-.5.5-.5h2z\"/><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.68 10.24a.5.5 0 01.61-.34l3.86 1.1c.25.07.47.2.65.38l4.26 4.27c.2.2.2.5 0 .7l-.7.71a.5.5 0 01-.71 0l-4.08-4.08a.5.5 0 00-.22-.13l-3.6-1.03a.5.5 0 01-.35-.61l.28-.97z\" clip-rule=\"evenodd\"/></svg>');\n      }\n    }\n  }\n\n  > input,\n  > textarea {\n    padding: var(--ld-input-padding-top-md) var(--ld-input-padding-x-md)\n      var(--ld-input-padding-bottom-md);\n    font: var(--ld-typo-body-m);\n    line-height: 1;\n    background-color: rgba(255, 255, 255, 0);\n    width: 100%;\n    border: 0;\n    border-radius: var(--ld-br-m);\n    outline: none;\n    appearance: none;\n    box-sizing: border-box;\n\n    &::placeholder {\n      opacity: var(--ld-input-placeholder-opacity);\n    }\n  }\n\n  > textarea {\n    height: 100%;\n    max-height: inherit;\n    min-height: inherit;\n    flex-grow: 1;\n  }\n\n  ::slotted(ld-button),\n  ::slotted(.ld-button),\n  > ld-button,\n  > .ld-button {\n    --ld-button-ghost-bg-color-active: transparent;\n    --ld-button-ghost-bg-color-focus: transparent;\n    --ld-button-ghost-bg-color-hover: transparent;\n    flex-shrink: 0;\n    z-index: 0;\n  }\n\n  ::slotted(ld-button[slot='start']),\n  ::slotted(.ld-button[slot='start']),\n  > ld-button:where(:not([slot='end'])):first-child,\n  > .ld-button:where(:not([slot='end'])):first-child {\n    --ld-button-border-top-right-radius: 0;\n    --ld-button-border-bottom-right-radius: 0;\n  }\n\n  ::slotted(ld-button[slot='end']),\n  ::slotted(.ld-button[slot='end']),\n  > ld-button:where(:not([slot='start'])):last-child,\n  > .ld-button:where(:not([slot='start'])):last-child {\n    --ld-button-border-top-left-radius: 0;\n    --ld-button-border-bottom-left-radius: 0;\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='start'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='start'])),\n  > ld-button[mode='ghost']:where(:not([slot='end'])):first-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='end'])):first-child {\n    margin-right: calc(-1 * var(--ld-input-padding-x-md));\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='end'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='end'])),\n  > ld-button[mode='ghost']:where(:not([slot='start'])):last-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='start'])):last-child {\n    margin-left: calc(-1 * var(--ld-input-padding-x-md));\n  }\n\n  ::slotted(ld-icon),\n  ::slotted(.ld-icon),\n  > ld-icon,\n  > .ld-icon {\n    color: var(--ld-input-icon-col);\n    cursor: text;\n    display: inline-flex;\n  }\n}\n\n:host(.ld-input--resize-both),\n.ld-input--resize-both {\n  > textarea {\n    resize: both; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n:host(.ld-input--resize-horizontal),\n.ld-input--resize-horizontal {\n  > textarea {\n    resize: horizontal; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n:host(.ld-input--resize-vertical),\n.ld-input--resize-vertical {\n  > textarea {\n    resize: vertical; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n:host(.ld-input--resize-none),\n.ld-input--resize-none {\n  > textarea {\n    resize: none; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n\n:host(.ld-input--sm),\n.ld-input--sm {\n  min-height: var(--ld-input-min-height-sm);\n\n  ::slotted(:not(ld-button, .ld-button)[slot='start']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='end']):first-child\n    ) {\n    margin-left: var(--ld-input-padding-x-sm);\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='end']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='start']):last-child\n    ) {\n    margin-right: var(--ld-input-padding-x-sm);\n  }\n\n  > input {\n    max-height: var(--ld-input-max-height-sm);\n\n    &[type='datetime-local']::-webkit-calendar-picker-indicator,\n    &[type='date']::-webkit-calendar-picker-indicator {\n      mask-size: 65%;\n    }\n    &[type='time'] {\n      min-width: var(--ld-input-time-min-width-sm);\n\n      &::-webkit-calendar-picker-indicator {\n        mask-size: 85%;\n      }\n    }\n  }\n\n  > input,\n  > textarea {\n    padding: var(--ld-input-padding-top-sm) var(--ld-input-padding-x-sm)\n      var(--ld-input-padding-bottom-sm);\n    font: var(--ld-typo-body-s);\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='start'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='start'])),\n  > ld-button[mode='ghost']:where(:not([slot='end'])):first-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='end'])):first-child {\n    margin-right: calc(-1 * var(--ld-input-padding-x-sm));\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='end'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='end'])),\n  > ld-button[mode='ghost']:where(:not([slot='start'])):last-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='start'])):last-child {\n    margin-left: calc(-1 * var(--ld-input-padding-x-sm));\n  }\n}\n\n:host(.ld-input--lg),\n.ld-input--lg {\n  min-height: var(--ld-input-min-height-lg);\n\n  ::slotted(:not(ld-button, .ld-button)[slot='start']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='end']):first-child\n    ) {\n    margin-left: var(--ld-input-padding-x-lg);\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='end']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='start']):last-child\n    ) {\n    margin-right: var(--ld-input-padding-x-lg);\n  }\n\n  > input {\n    max-height: var(--ld-input-max-height-lg);\n\n    &[type='date']::-webkit-calendar-picker-indicator {\n      mask-size: 90%;\n    }\n    &[type='time'] {\n      min-width: var(--ld-input-time-min-width-lg);\n\n      &::-webkit-calendar-picker-indicator {\n        mask-size: 114%;\n      }\n    }\n  }\n\n  > input,\n  > textarea {\n    padding: var(--ld-input-padding-top-lg) var(--ld-input-padding-x-lg)\n      var(--ld-input-padding-bottom-lg) var(--ld-input-padding-x-lg);\n    font: var(--ld-typo-body-l);\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='start'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='start'])),\n  > ld-button[mode='ghost']:where(:not([slot='end'])):first-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='end'])):first-child {\n    margin-right: calc(-1 * var(--ld-input-padding-x-lg));\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='end'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='end'])),\n  > ld-button[mode='ghost']:where(:not([slot='start'])):last-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='start'])):last-child {\n    margin-left: calc(-1 * var(--ld-input-padding-x-lg));\n  }\n}\n\n:host(.ld-input--dark),\n.ld-input--dark {\n  background-color: var(--ld-input-dark-bg-col);\n}\n\n@media (hover: hover) {\n  :host(\n      :not(\n          .ld-input--invalid,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            ),\n          .ld-input--disabled\n        ):hover:not(:focus-within)\n    ),\n  .ld-input:not(\n      .ld-input--invalid,\n      [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false'])),\n      .ld-input--disabled\n    ):hover:not(:focus-within) {\n    &::before {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-border-col-hover);\n    }\n  }\n}\n\n:host(:not(.ld-input--invalid):focus-within),\n.ld-input:not(.ld-input--invalid):focus-within {\n  &::before {\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-thm-primary);\n  }\n}\n\n:host(.ld-input--dark:not(.ld-input--invalid):focus-within),\n.ld-input--dark:not(.ld-input--invalid):focus-within {\n  background-color: var(--ld-input-dark-bg-col-focus);\n}\n\n:host(.ld-input--invalid:focus-within),\n.ld-input--invalid:focus-within {\n  background-color: var(--ld-input-bg-col-invalid-focus);\n}\n\n:host(\n    .ld-input--invalid:not(\n        .ld-input--disabled,\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      ):where(:not(:focus))\n  ),\n.ld-input--invalid:not(\n    .ld-input--disabled,\n    [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n  ):where(:not(:focus)) {\n  background-color: var(--ld-input-bg-col-invalid);\n  color: var(--ld-input-text-col-invalid);\n  -webkit-text-fill-color: var(--ld-input-text-col-invalid);\n}\n\n:host(\n    .ld-input--invalid:not(\n        .ld-input--disabled,\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      )\n  ),\n.ld-input--invalid:not(\n    .ld-input--disabled,\n    [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n  ) {\n  &::before {\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-text-col-invalid);\n  }\n\n  > input,\n  > textarea {\n    color: var(--ld-input-text-col-invalid);\n    -webkit-text-fill-color: var(--ld-input-text-col-invalid);\n  }\n\n  > input::-webkit-calendar-picker-indicator {\n    background: var(--ld-input-text-col-invalid);\n\n    &:focus:focus-visible {\n      background: var(--ld-input-icon-col-invalid-focus);\n    }\n  }\n}\n\n:host(\n    .ld-input--invalid:not(\n        .ld-input--disabled,\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      ):focus-within\n  ),\n.ld-input--invalid:not(\n    .ld-input--disabled,\n    [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n  ):focus-within {\n  background-color: var(--ld-input-bg-col-invalid-focus);\n\n  > input,\n  > textarea {\n    color: var(--ld-input-text-col-invalid-focus);\n    -webkit-text-fill-color: var(--ld-input-text-col-invalid-focus);\n  }\n}\n\n:host(.ld-input--disabled),\n:host([aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))),\n.ld-input.ld-input--disabled,\n.ld-input[aria-disabled]:where(\n    :not([aria-disabled=''], [aria-disabled='false'])\n  ) {\n  color: var(--ld-input-text-col-disabled);\n  background-color: var(--ld-input-bg-col-disabled);\n\n  &::before {\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-border-col-disabled);\n  }\n\n  input,\n  textarea {\n    color: var(--ld-input-text-col-disabled);\n    caret-color: transparent;\n    -webkit-text-fill-color: var(--ld-input-text-col-disabled);\n  }\n\n  input::-webkit-calendar-picker-indicator {\n    background: var(--ld-input-text-col-disabled);\n    pointer-events: none;\n  }\n\n  ::slotted(ld-icon),\n  ::slotted(.ld-icon),\n  ld-icon,\n  .ld-icon {\n    color: currentColor;\n  }\n}\n\n.ld-input__placeholder {\n  position: absolute;\n  display: flex;\n  height: 100%;\n  align-items: center;\n  pointer-events: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  right: var(--ld-input-padding-x-md);\n  left: var(--ld-input-padding-x-md);\n  margin-right: 0;\n  opacity: var(--ld-input-placeholder-opacity);\n}\n\n.ld-select__slot-container {\n  display: none;\n}\n"],"names":["isAriaDisabled","ariaDisabledValue","isFalsy","value","undefined","cloneAttributes","attributesToIgnoreSet","Set","arguments","length","attributesToClone","attr","this","el","attributes","has","name","valueToClone","clonedAttributes","observer","MutationObserver","mutationsList","mutation","attributeName","attrValue","getAttribute","Object","assign","observe","subtree","childList","focusableSelector","map","selector","join","getFirstFocusable","matches","tagName","hostEl","getRootNode","slottedEl","querySelector","Array","from","children","find","child","hasAttribute","shadowRoot","shadowRootChildren","focusable","isInnerFocusable","element","autofocusHandlerTimeout","registerAutofocus","autofocus","setTimeout","firstWithAutofocus","document","querySelectorAll","disabled","focusInner","focusInnerOrFocus","focus","getClassNames","classNames","filter","className","LdInput","isInputTypeFile","input","type","handleChange","ev","dispatchEvent","InputEvent","ldchange","emit","handleInput","ldinput","handleClick","target","composedPath","ariaDisabled","preventDefault","closest","activeElement","MouseEvent","bubbles","handleKeyDown","outerForm","formToSubmit","form","_a","includes","key","multiline","requestSubmit","updateHiddenInput","hiddenInput","createHiddenInput","dirname","dirName","remove","setAttribute","removeAttribute","clonedInput","cloneNode","style","display","replaceWith","createElement","appendChild","updateIconAndButtonSize","forEach","button","size","classList","add","icon","componentWillLoad","defineProperty","get","files","attributesObserver","call","autocomplete","disconnectedCallback","disconnect","render","cl","tone","invalid","resize","_c","clonedAttributesWithoutType","__rest","h","Host","class","onClick","readonly","onChange","onInput","part","ref","tabIndex","ldTabindex","placeholder","onKeyDown","_b"],"sourceRoot":""}