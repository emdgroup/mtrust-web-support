{"version":3,"file":"static/js/6617.d3d68b19.chunk.js","mappings":"iIAEaA,EAAUA,CAACC,EAAkBC,IAEtCA,IACE,YAAaA,GAAMA,EAAGF,QAAQC,IAC9BD,EAAQC,EAAWC,EAAGC,cAAwCC,M,wCCDvDC,EAAiBC,GAC5BA,EAAWC,QAAQC,GAAcA,IAAWC,KAAK,I,sFCNnD,MCiBaC,EAAU,M,2IAgCrB,KAAAC,aAAgBC,IAEd,GADAC,KAAKC,eAAgB,GACjBd,EAAAA,EAAAA,GAAQ,gBAAiBa,KAAKX,IAChCW,KAAKE,iBAAiBC,KAAK,CACzBJ,iBAEG,CACL,MAAMK,EAAWC,MAAMC,KAAKN,KAAKX,GAAGkB,WAAWC,UAAUC,QAAQT,KAAKX,IACtEW,KAAKU,cAAcP,KAAK,CACtBC,WACAL,Y,GAKN,KAAAY,cAAiBC,IACfZ,KAAKD,SAAYa,EAAGC,OAA4BC,QAChDd,KAAKF,aAAaE,KAAKD,SAAS,E,6CA1CP,E,oBAGD,gB,6EA0C1BgB,iBAAAA,GACMf,KAAKD,UACPC,KAAKF,aAAaE,KAAKD,S,CAI3BiB,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,MAAAC,IAAA,2CAAIC,MAAM,eAAeC,KAAK,OAC3BpB,KAAKqB,aACJJ,EAAAA,EAAAA,GAAA,iBACEE,OAAO3B,EAAAA,EAAAA,GAAc,CACnB,+BACAQ,KAAKsB,iBAAmB,yCAE1BF,KAAK,gBAELH,EAAAA,EAAAA,GAAA,OAAKE,MAAM,8BAA8BC,KAAK,sBAC5CH,EAAAA,EAAAA,GAAA,+BACiBjB,KAAKuB,kBAAoB,YAASC,EAAS,aAC9CxB,KAAKyB,eACjBX,QAASd,KAAKD,SACdE,cAAeD,KAAKC,cACpByB,QAAS1B,KAAKW,cACdS,KAAK,gBAKbH,EAAAA,EAAAA,GAAA,QAAAC,IAAA,6C,wCDlGoB,y0C","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/closest.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-table/ld-table-row/ld-table-row.shadow.css?tag=ld-table-row&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-table/ld-table-row/ld-table-row.tsx"],"sourcesContent":["// This helper function is similar to Element.closest(),\n// however it also traverses shadow DOM boundaries.\nexport const closest = (selector: string, el: Element | Document) => {\n  return (\n    el &&\n    (('closest' in el && el.closest(selector)) ||\n      closest(selector, (el.getRootNode() as unknown as ShadowRoot).host))\n  )\n}\n","/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",":host {\n  display: contents;\n\n  /* Note that the px unit is required in Safari for the calc to work */\n  &(:first-of-type) {\n    --ld-table-selection-wrapper-border-width-top: 0px;\n  }\n  &(:last-of-type) {\n    --ld-table-selection-wrapper-border-width-bottom: 0px;\n  }\n\n  --ld-table-selection-wrapper-gradient: linear-gradient(\n    to top,\n    var(--ld-table-border-col),\n    var(--ld-table-border-col)\n      var(--ld-table-selection-wrapper-border-width-bottom),\n    var(--ld-table-bg-col) var(--ld-table-selection-wrapper-border-width-bottom),\n    var(--ld-table-bg-col),\n    var(--ld-table-bg-col),\n    var(--ld-table-bg-col)\n      calc(100% - var(--ld-table-selection-wrapper-border-width-top)),\n    var(--ld-table-border-col)\n      calc(100% - var(--ld-table-selection-wrapper-border-width-top)),\n    var(--ld-table-border-col) 100%\n  );\n}\n\ntr {\n  background-color: inherit;\n  outline: var(--ld-table-row-outline-half);\n}\n\n.ld-table__selection-wrapper {\n  vertical-align: middle;\n  align-items: center;\n  background: var(--ld-table-selection-wrapper-gradient);\n  display: flex;\n  justify-content: center;\n  padding-inline: var(--ld-table-cell-padding-x);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n\n  &::after {\n    content: '';\n    background-color: var(--ld-table-border-col);\n    position: absolute;\n    right: 0;\n    top: var(--ld-sp-6);\n    bottom: var(--ld-sp-6);\n    width: var(--ld-table-row-outline-width);\n  }\n}\n\n.ld-table-row__selection-cell {\n  &::part(cell) {\n    min-width: 1.25rem;\n    position: relative;\n    z-index: 1;\n  }\n}\n\n.ld-table-row__selection-cell--sticky {\n  &::part(cell) {\n    left: 0;\n    position: sticky;\n  }\n}\n","import { Component, Element, Event, EventEmitter, h, Prop } from '@stencil/core'\nimport { closest } from '../../../utils/closest'\nimport { getClassNames } from '../../../utils/getClassNames'\n\n/**\n * @part checkbox - the selection checkbox\n * @part row - the actual tr element\n * @part select - the selection cell\n * @part selection-wrapper - the selection wrapper element\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-table-row',\n  styleUrl: 'ld-table-row.shadow.css',\n  shadow: true,\n})\nexport class LdTableRow {\n  @Element() el: HTMLLdTableRowElement\n\n  /** Makes the row selectable by adding a checkbox to the start of the row. */\n  @Prop() selectable?: boolean\n\n  /** In selectable mode the checkbox is sticky by default. */\n  @Prop() selectionSticky? = true\n\n  /** Makes the row selectable by adding a checkbox to the start of the row. */\n  @Prop() selectionLabel? = 'Row selection'\n\n  /** Indicates that the row is selected. */\n  @Prop({ mutable: true }) selected?: boolean\n\n  /** Indicates that the selection state is indeterminate. */\n  @Prop({ mutable: true }) indeterminate?: boolean\n\n  /** Indicates that the row selection is disabled. */\n  @Prop() selectionDisabled?: boolean\n\n  /** Emitted with selected state. */\n  @Event() ldTableSelectAll: EventEmitter<{\n    selected: boolean\n  }>\n\n  /** Emitted with row index and selected state. */\n  @Event() ldTableSelect: EventEmitter<{\n    rowIndex: number\n    selected: boolean\n  }>\n\n  handleSelect = (selected: boolean) => {\n    this.indeterminate = false\n    if (closest('ld-table-head', this.el)) {\n      this.ldTableSelectAll.emit({\n        selected,\n      })\n    } else {\n      const rowIndex = Array.from(this.el.parentNode.children).indexOf(this.el)\n      this.ldTableSelect.emit({\n        rowIndex,\n        selected,\n      })\n    }\n  }\n\n  onSelectInput = (ev: InputEvent) => {\n    this.selected = (ev.target as HTMLInputElement).checked\n    this.handleSelect(this.selected)\n  }\n\n  componentWillLoad() {\n    if (this.selected) {\n      this.handleSelect(this.selected)\n    }\n  }\n\n  render() {\n    return (\n      <tr class=\"ld-table-row\" part=\"row\">\n        {this.selectable && (\n          <ld-table-cell\n            class={getClassNames([\n              'ld-table-row__selection-cell',\n              this.selectionSticky && 'ld-table-row__selection-cell--sticky',\n            ])}\n            part=\"cell select\"\n          >\n            <div class=\"ld-table__selection-wrapper\" part=\"selection-wrapper\">\n              <ld-checkbox\n                aria-disabled={this.selectionDisabled ? 'true' : undefined}\n                aria-label={this.selectionLabel}\n                checked={this.selected}\n                indeterminate={this.indeterminate}\n                onInput={this.onSelectInput}\n                part=\"checkbox\"\n              />\n            </div>\n          </ld-table-cell>\n        )}\n        <slot />\n      </tr>\n    )\n  }\n}\n"],"names":["closest","selector","el","getRootNode","host","getClassNames","classNames","filter","className","join","LdTableRow","handleSelect","selected","this","indeterminate","ldTableSelectAll","emit","rowIndex","Array","from","parentNode","children","indexOf","ldTableSelect","onSelectInput","ev","target","checked","componentWillLoad","render","h","key","class","part","selectable","selectionSticky","selectionDisabled","undefined","selectionLabel","onInput"],"sourceRoot":""}