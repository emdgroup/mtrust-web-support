{"version":3,"file":"static/js/9316.bb809802.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/closest.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sidenav/ld-sidenav-scroller-internal/ld-sidenav-scroller-internal.shadow.css?tag=ld-sidenav-scroller-internal&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sidenav/ld-sidenav-scroller-internal/ld-sidenav-scroller-internal.tsx","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sidenav/ld-sidenav-separator/ld-sidenav-separator.shadow.css?tag=ld-sidenav-separator&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sidenav/ld-sidenav-separator/ld-sidenav-separator.tsx","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-sidenav/utils/toggleStackToTop.ts"],"sourcesContent":["// This helper function is similar to Element.closest(),\n// however it also traverses shadow DOM boundaries.\nexport const closest = (selector: string, el: Element | Document) => {\n  return (\n    el &&\n    (('closest' in el && el.closest(selector)) ||\n      closest(selector, (el.getRootNode() as unknown as ShadowRoot).host))\n  )\n}\n","/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",":host {\n  --ld-scroll-shadow-height: 1.5rem;\n  --ld-scroll-shadow-intensity: 0.1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden auto;\n  overscroll-behavior: none;\n  padding-right: var(--ld-sp-32);\n  scrollbar-width: none;\n  width: 100%;\n\n  &::-webkit-scrollbar,\n  &::-webkit-scrollbar-thumb {\n    display: none;\n  }\n\n  ::slotted(ld-sidenav-navitem:first-child),\n  ::slotted(ld-sidenav-heading:first-child) {\n    margin-top: var(--ld-sidenav-padding-y);\n  }\n\n  ::slotted(ld-sidenav-navitem) {\n    margin-bottom: var(--ld-sidenav-padding-y);\n    will-change: opacity; /* prevents flickering on transition in Safari */\n  }\n\n  &(.ld-sidenav-scroller-internal--relative) {\n    position: relative;\n\n    .ld-sidenav-scroller-internal__hr-top,\n    .ld-sidenav-scroller-internal__hr-bottom {\n      position: sticky;\n    }\n  }\n\n  &(.ld-sidenav-scroller-internal--collapsed) {\n    .ld-sidenav-scroller-internal__shadow-top,\n    .ld-sidenav-scroller-internal__shadow-bottom {\n      transform: translateX(\n        calc(\n          var(--ld-sidenav-translate-x-direction) *\n            (50% - (0.5 * var(--ld-sidenav-width-collapsed)))\n        )\n      );\n    }\n  }\n}\n\n.ld-sidenav-scroller-internal__shadow-top,\n.ld-sidenav-scroller-internal__shadow-bottom {\n  position: sticky;\n  pointer-events: none;\n  height: 0;\n  width: 100%;\n  z-index: 1;\n  opacity: 0;\n  left: 0;\n  transition: opacity var(--ld-sidenav-transition-duration) linear,\n    transform var(--ld-sidenav-transition-duration) ease;\n\n  &::after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: var(--ld-scroll-shadow-height);\n  }\n}\n\n.ld-sidenav-scroller-internal__shadow-top {\n  top: 0;\n\n  &::after {\n    background: radial-gradient(\n        farthest-side at 50% 0,\n        rgb(0, 0, 0, var(--ld-scroll-shadow-intensity)),\n        rgb(0, 0, 0, 0)\n      )\n      0 100% no-repeat;\n  }\n}\n\n.ld-sidenav-scroller-internal__shadow-bottom {\n  top: 100%;\n\n  &::after {\n    background: radial-gradient(\n        farthest-side at 50% 100%,\n        rgb(0, 0, 0, var(--ld-scroll-shadow-intensity)),\n        rgb(0, 0, 0, 0)\n      )\n      0 100% no-repeat;\n    transform: translateY(-100%);\n  }\n}\n\n.ld-sidenav-scroller-internal__hr-top,\n.ld-sidenav-scroller-internal__hr-bottom {\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: calc(100% - 2 * var(--ld-sidenav-padding-x));\n}\n\n.ld-sidenav-scroller-internal__hr-top {\n  top: 0;\n}\n\n.ld-sidenav-scroller-internal__hr-bottom {\n  top: calc(100% - var(--ld-sp-1) * 1.5);\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Method,\n  State,\n} from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\nimport { closest } from '../../../utils/closest'\n\n/** @internal **/\n@Component({\n  tag: 'ld-sidenav-scroller-internal',\n  styleUrl: 'ld-sidenav-scroller-internal.shadow.css',\n  shadow: true,\n})\nexport class LdSidenavScrollerInternal {\n  @Element() el: HTMLElement\n  private sidenav: HTMLLdSidenavElement\n\n  @State() hasShadowBottom = false\n  @State() hasShadowTop = false\n  @State() needsHRBottom: boolean\n  @State() needsHRTop: boolean\n  @State() relative: boolean\n  @State() sidenavClosable: boolean\n  @State() sidenavCollapsed: boolean\n\n  @Listen('ldSidenavCollapsedChange', { target: 'window', passive: true })\n  handleSidenavCollapsedChange(\n    ev: CustomEvent<{\n      collapsed: boolean\n      fully: boolean\n    }>\n  ) {\n    if (ev.target !== this.sidenav) return\n    this.sidenavCollapsed = ev.detail.collapsed\n  }\n\n  @Listen('ldSidenavBreakpointChange', { target: 'window', passive: true })\n  handleSidenavBreakpointChange(ev: CustomEvent<boolean>) {\n    if (ev.target !== this.sidenav) return\n    this.sidenavClosable = ev.detail\n  }\n\n  /**\n   * Makes shadows either appear or disappear on top and bottom of the\n   * scroll container, depending on the current scroll position.\n   */\n  @Method()\n  async updateShadows() {\n    const scrollContainer = this.el\n    if (!scrollContainer) return\n    this.hasShadowBottom =\n      scrollContainer.scrollTop <\n      scrollContainer.scrollHeight - scrollContainer.clientHeight - 10\n    this.hasShadowTop = scrollContainer.scrollTop > 10\n  }\n\n  /** Scrolls the scroll container to the top instantly. */\n  @Method()\n  async scrollToTop(smoothly = false) {\n    const prefersReducedMotion = window.matchMedia(\n      '(prefers-reduced-motion: reduce)'\n    ).matches\n    try {\n      this.el.scrollTo({\n        top: 0,\n        behavior: smoothly && !prefersReducedMotion ? 'smooth' : 'auto',\n      })\n    } catch (err) {\n      // js-dom seems to not know scrollTo - ignoring for now\n    }\n  }\n\n  componentWillLoad() {\n    this.sidenav = closest('ld-sidenav', this.el)\n    if (!this.sidenav) return\n\n    this.needsHRTop = !!this.sidenav.querySelector('[slot=\"top\"]')\n    this.needsHRBottom = !!this.sidenav.querySelector('[slot=\"bottom\"]')\n    this.relative = !this.sidenav.querySelector('ld-sidenav-slider')\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.updateShadows()\n    })\n  }\n\n  render() {\n    const cl = getClassNames([\n      'ld-sidenav-scroller-internal',\n      this.relative && 'ld-sidenav-scroller-internal--relative',\n      this.sidenavCollapsed &&\n        !this.sidenavClosable &&\n        'ld-sidenav-scroller-internal--collapsed',\n    ])\n\n    return (\n      <Host\n        class={cl}\n        onScroll={this.updateShadows.bind(this)}\n        onLdSidenavAccordionTransitionEnd={this.updateShadows.bind(this)}\n        data-needs-bottom={this.needsHRBottom}\n        data-needs-top={this.needsHRTop}\n      >\n        <div\n          class=\"ld-sidenav-scroller-internal__shadow-top\"\n          style={{ opacity: this.hasShadowTop ? '1' : '0' }}\n          part=\"shadow-top\"\n        ></div>\n        <div\n          class=\"ld-sidenav-scroller-internal__shadow-bottom\"\n          style={{ opacity: this.hasShadowBottom ? '1' : '0' }}\n          part=\"shadow-bottom\"\n        ></div>\n        {this.needsHRTop && (\n          <ld-sidenav-separator\n            class=\"ld-sidenav-scroller-internal__hr-top\"\n            style={{ opacity: this.hasShadowTop ? '0' : '1' }}\n          ></ld-sidenav-separator>\n        )}\n        {this.needsHRBottom && (\n          <ld-sidenav-separator\n            class=\"ld-sidenav-scroller-internal__hr-bottom\"\n            style={{ opacity: this.hasShadowBottom ? '0' : '1' }}\n          ></ld-sidenav-separator>\n        )}\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n",":host {\n  display: block;\n  margin: 0 var(--ld-sidenav-padding-x) var(--ld-sidenav-padding-y);\n  transform-origin: left;\n  transition: transform var(--ld-sidenav-transition-duration-collapse-expand)\n    ease;\n\n  hr {\n    border: 0;\n    border-radius: var(--ld-br-full);\n    height: var(--ld-sp-2);\n    margin: 0;\n    transition: transform var(--ld-sidenav-transition-duration-collapse-expand)\n      ease;\n    background-color: var(--ld-sidenav-separator-line-bg-col);\n  }\n\n  &(.ld-sidenav-separator--collapsed) {\n    transform: translateX(var(--ld-sidenav-translate-x-delta))\n      scaleX(var(--ld-sidenav-separator-scale-x-collapsed));\n\n    hr {\n      transform: translateY(\n        var(\n          --ld-sidenav-navitem-move-up-closable,\n          var(--ld-sidenav-navitem-move-up, 0)\n        )\n      );\n      transition: var(--ld-sidenav-stack-to-top-transition);\n    }\n  }\n}\n","import { Component, Element, h, Host, Listen, State } from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\nimport { closest } from '../../../utils/closest'\nimport { toggleStackToTop } from '../utils/toggleStackToTop'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-sidenav-separator',\n  styleUrl: 'ld-sidenav-separator.shadow.css',\n  shadow: true,\n})\nexport class LdSidenavSeparator {\n  @Element() el: HTMLElement\n  private sidenav: HTMLLdSidenavElement\n\n  @State() sidenavCollapsed: boolean\n  @State() sidenavClosable: boolean\n  @State() scaleXCollapsed = 1\n\n  @Listen('ldSidenavCollapsedChange', { target: 'window', passive: true })\n  handleSidenavCollapsedChange(\n    ev: CustomEvent<{\n      collapsed: boolean\n      fully: boolean\n    }>\n  ) {\n    if (ev.target !== this.sidenav) return\n    this.sidenavCollapsed = ev.detail.collapsed\n    if (\n      this.el.parentElement &&\n      !['LD-SIDENAV-SLIDER', 'LD-SIDENAV-SUBNAV'].includes(\n        this.el.parentElement.tagName\n      )\n    ) {\n      return\n    }\n    if (this.sidenav.narrow) {\n      toggleStackToTop(this.el, this.sidenavCollapsed)\n    }\n  }\n\n  @Listen('ldSidenavBreakpointChange', { target: 'window', passive: true })\n  handleSidenavBreakpointChange(ev: CustomEvent<boolean>) {\n    if (ev.target !== this.sidenav) return\n    this.sidenavClosable = ev.detail\n    this.updateStackToTop()\n  }\n\n  private computeScaleXCollapsed = () => {\n    const sidenavWidth = parseFloat(\n      window\n        .getComputedStyle(this.sidenav)\n        .getPropertyValue('--ld-sidenav-width')\n    )\n    const sidenavPaddingX = parseFloat(\n      window\n        .getComputedStyle(this.sidenav)\n        .getPropertyValue('--ld-sidenav-padding-x')\n    )\n    const sidenavNavitemIconSize = parseFloat(\n      window\n        .getComputedStyle(this.sidenav)\n        .getPropertyValue('--ld-sidenav-navitem-icon-size')\n    )\n    return sidenavNavitemIconSize / (sidenavWidth - 2 * sidenavPaddingX)\n  }\n\n  private updateStackToTop = () => {\n    if (this.sidenavClosable) {\n      toggleStackToTop(this.el, false)\n    } else {\n      toggleStackToTop(this.el, this.sidenav.narrow && this.sidenavCollapsed)\n    }\n  }\n\n  componentWillLoad() {\n    this.sidenav = closest('ld-sidenav', this.el)\n    if (this.sidenav) {\n      this.scaleXCollapsed = this.computeScaleXCollapsed() || 1\n      this.sidenavCollapsed = this.sidenav.collapsed\n    }\n  }\n\n  componentDidLoad() {\n    // The ldSidenavCollapsedChange event can be fired before this component is loaded.\n    // So we need to update the stacking here.\n    setTimeout(() => {\n      this.updateStackToTop()\n    })\n  }\n\n  render() {\n    const cl = getClassNames([\n      'ld-sidenav-separator',\n      this.sidenavCollapsed &&\n        !this.sidenavClosable &&\n        'ld-sidenav-separator--collapsed',\n    ])\n\n    return (\n      <Host\n        style={{\n          '--ld-sidenav-separator-scale-x-collapsed':\n            this.scaleXCollapsed.toString(),\n        }}\n        class={cl}\n      >\n        <hr part=\"hr\" />\n      </Host>\n    )\n  }\n}\n","import { closest } from '../../../utils/closest'\n\nexport const toggleStackToTop = (el: HTMLElement, stacked: boolean) => {\n  const outerSlider = closest('ld-sidenav-slider', el)\n  if (!outerSlider) return\n\n  // If not stacked, put everything back in place.\n  if (!stacked) {\n    el.style.removeProperty('--ld-sidenav-navitem-move-up')\n    return\n  }\n\n  const sidenavPaddingY =\n    parseInt(\n      window\n        .getComputedStyle(outerSlider)\n        .getPropertyValue('--ld-sidenav-padding-y')\n    ) * 16\n\n  // Else, calculate how much vertical space is taken by stacked items above\n  // and move the nav item up accordingly.\n  let totalSpaceAbove = 0\n  let totalSpaceOccupiedAbove = 0\n  for (const elem of Array.from(el.parentElement?.children || [])) {\n    if (el === elem) break\n\n    if (\n      elem.tagName === 'LD-SIDENAV-ACCORDION' ||\n      elem.tagName === 'LD-SIDENAV-SEPARATOR' ||\n      elem.tagName === 'LD-SIDENAV-SUBNAV' ||\n      (elem.tagName === 'LD-SIDENAV-NAVITEM' &&\n        !['secondary', 'tertiary'].includes(\n          (elem as HTMLLdSidenavNavitemElement).mode\n        ))\n    ) {\n      totalSpaceOccupiedAbove += elem.getBoundingClientRect().height\n    } else {\n      totalSpaceAbove += sidenavPaddingY\n    }\n    totalSpaceAbove += elem.getBoundingClientRect().height\n  }\n\n  const spaceToMoveUp = totalSpaceAbove - totalSpaceOccupiedAbove\n  el.style.setProperty('--ld-sidenav-navitem-move-up', `-${spaceToMoveUp}px`)\n}\n"],"names":["closest","selector","el","getRootNode","host","getClassNames","classNames","filter","className","join","LdSidenavScrollerInternal","handleSidenavCollapsedChange","ev","target","this","sidenav","sidenavCollapsed","detail","collapsed","handleSidenavBreakpointChange","sidenavClosable","updateShadows","scrollContainer","hasShadowBottom","scrollTop","scrollHeight","clientHeight","hasShadowTop","scrollToTop","smoothly","arguments","length","undefined","prefersReducedMotion","window","matchMedia","matches","scrollTo","top","behavior","err","componentWillLoad","needsHRTop","querySelector","needsHRBottom","relative","componentDidLoad","setTimeout","render","cl","h","Host","key","class","onScroll","bind","onLdSidenavAccordionTransitionEnd","style","opacity","part","LdSidenavSeparator","computeScaleXCollapsed","sidenavWidth","parseFloat","getComputedStyle","getPropertyValue","sidenavPaddingX","updateStackToTop","toggleStackToTop","narrow","parentElement","includes","tagName","scaleXCollapsed","toString","stacked","outerSlider","removeProperty","sidenavPaddingY","parseInt","totalSpaceAbove","totalSpaceOccupiedAbove","elem","Array","from","_a","children","mode","getBoundingClientRect","height","spaceToMoveUp","setProperty"],"sourceRoot":""}