{"version":3,"file":"static/js/3998.7d4868ec.chunk.js","mappings":"6JAAA,MCaaA,EAAa,MAL1BC,WAAAA,CAAAC,I,eAUU,KAAAC,cAAgB,KACtB,MAAMC,EAASC,KAAKC,GAAGC,iBAAiB,YACnCH,EAAOI,SAEZJ,EAAOK,SAASC,IACdA,EAAMC,aAAUC,CAAS,IAE3BR,EAAOA,EAAOI,OAAS,GAAGG,SAAU,EAAI,C,CAG1CE,gBAAAA,GACER,KAAKS,SAAW,IAAIC,iBAAiBV,KAAKF,eAC1CE,KAAKS,SAASE,QAAQX,KAAKC,GAAI,CAC7BW,SAAS,EACTC,WAAW,EACXC,YAAY,IAGdd,KAAKF,e,CAGPiB,oBAAAA,GAEMf,KAAKS,UAAUT,KAAKS,SAASO,Y,CAGnCC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,wDAAgB,cAAcC,MAAM,mBAClCF,EAAAA,EAAAA,GAAA,MAAAC,IAAA,2CAAIC,MAAM,uBAAuBC,KAAK,SACpCH,EAAAA,EAAAA,GAAA,QAAAC,IAAA,8C,wCDhDe,yK","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-breadcrumbs/ld-breadcrumbs.css?tag=ld-breadcrumbs&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-breadcrumbs/ld-breadcrumbs.tsx"],"sourcesContent":[":host,\n.ld-breadcrumbs {\n  --ld-crumb-icon-gap: 0.5em;\n  --ld-crumb-gap: 0.6em;\n\n  line-height: 1.5;\n}\n\n.ld-breadcrumbs > ol {\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n","import { Component, h, Element } from '@stencil/core'\n\n/**\n * @part list - Breadcrumbs list\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n\n@Component({\n  tag: 'ld-breadcrumbs',\n  styleUrl: 'ld-breadcrumbs.css',\n  shadow: true,\n})\nexport class LdBreadcrumbs {\n  @Element() el: HTMLElement\n\n  private observer: MutationObserver\n\n  private updateCurrent = () => {\n    const crumbs = this.el.querySelectorAll('ld-crumb')\n    if (!crumbs.length) return\n\n    crumbs.forEach((crumb) => {\n      crumb.current = undefined\n    })\n    crumbs[crumbs.length - 1].current = true\n  }\n\n  componentDidLoad() {\n    this.observer = new MutationObserver(this.updateCurrent)\n    this.observer.observe(this.el, {\n      subtree: true,\n      childList: true,\n      attributes: false,\n    })\n\n    this.updateCurrent()\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.observer) this.observer.disconnect()\n  }\n\n  render() {\n    return (\n      <nav aria-label=\"Breadcrumbs\" class=\"ld-breadcrumbs\">\n        <ol class=\"ld-breadcrumbs__list\" part=\"list\">\n          <slot></slot>\n        </ol>\n      </nav>\n    )\n  }\n}\n"],"names":["LdBreadcrumbs","constructor","hostRef","updateCurrent","crumbs","this","el","querySelectorAll","length","forEach","crumb","current","undefined","componentDidLoad","observer","MutationObserver","observe","subtree","childList","attributes","disconnectedCallback","disconnect","render","h","key","class","part"],"sourceRoot":""}