{"version":3,"file":"static/js/5798.b9eb257b.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/utils/getClassNames.ts","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-pagination/ld-pagination.shadow.css?tag=ld-pagination&encapsulation=shadow","../node_modules/.pnpm/@emdgroup-liquid+liquid@5.14.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@emdgroup-liquid/liquid/dist/esm/src/liquid/components/ld-pagination/ld-pagination.tsx"],"sourcesContent":["/**\n * Generates a class names string from an array.\n *\n * TODO: memoized functions possible?\n */\nexport const getClassNames = (classNames: (string | false)[]) =>\n  classNames.filter((className) => className).join(' ')\n",".ld-pagination {\n  /* Not using 0s here because we rely on the transition end event. */\n  --ld-pagination-animation-duration: var(--ld-transition-duration-instant);\n  --ld-pagination-sm-item-size: 2rem;\n  --ld-pagination-md-item-size: 2.5rem;\n  --ld-pagination-lg-item-size: 3.125rem;\n  --ld-pagination-column-size: var(--ld-pagination-default-column-size);\n  --ld-pagination-default-column-size: calc(\n    var(--ld-pagination-item-size) + var(--ld-pagination-items-space)\n  );\n  --ld-pagination-dot-col: var(--ld-thm-primary);\n  --ld-pagination-dots-indicator-size: calc(\n    var(--ld-pagination-dots-size) + var(--ld-sp-8)\n  );\n  --ld-pagination-dots-indicator-size-active: calc(\n    var(--ld-pagination-dots-size) + var(--ld-sp-12)\n  );\n  --ld-pagination-dots-sm-size: 0.25rem;\n  --ld-pagination-dots-md-size: 0.375rem;\n  --ld-pagination-dots-lg-size: 0.5rem;\n  --ld-pagination-dots-size: var(--ld-pagination-dots-md-size);\n  --ld-pagination-dots-sm-space: var(--ld-sp-8);\n  --ld-pagination-dots-md-space: var(--ld-sp-12);\n  --ld-pagination-dots-lg-space: var(--ld-sp-16);\n  --ld-pagination-dots-space: var(--ld-pagination-dots-md-space);\n  --ld-pagination-item-size: var(--ld-pagination-md-item-size);\n  --ld-pagination-items-space: var(--ld-sp-4);\n  --ld-pagination-marker-col: var(--ld-thm-primary-alpha-lowest);\n  --ld-pagination-more-indicator-font: var(--ld-typo-body-m);\n  --ld-pagination-primary-col: var(--ld-thm-primary);\n  --ld-pagination-selected-col: var(--thm-primary-active);\n\n  align-items: center;\n  display: inline-flex;\n  list-style: none;\n  margin: 0;\n  /* for the focus outline */\n  padding: var(--ld-sp-1);\n  position: relative;\n\n  &--sm {\n    --ld-pagination-more-indicator-font: var(--ld-typo-body-s);\n    --ld-pagination-item-size: var(--ld-pagination-sm-item-size);\n    --ld-pagination-dots-size: var(--ld-pagination-dots-sm-size);\n    --ld-pagination-dots-space: var(--ld-pagination-dots-sm-space);\n  }\n\n  &--lg {\n    --ld-pagination-more-indicator-font: var(--ld-typo-body-l);\n    --ld-pagination-item-size: var(--ld-pagination-lg-item-size);\n    --ld-pagination-dots-size: var(--ld-pagination-dots-lg-size);\n    --ld-pagination-dots-space: var(--ld-pagination-dots-lg-space);\n  }\n\n  &--brand-color {\n    --ld-pagination-marker-col: var(--ld-col-wht-alpha-lowest);\n    --ld-pagination-dot-col: var(--ld-col-wht);\n    --ld-pagination-primary-col: var(--ld-col-wht);\n    --ld-pagination-selected-col: var(--ld-col-wht);\n\n    ld-button::part(button) {\n      color: var(--ld-col-wht);\n\n      &:hover {\n        background-color: var(--ld-col-wht-alpha-low);\n      }\n    }\n  }\n}\n\n.ld-pagination__arrow:not(:last-child),\n.ld-pagination__sticky {\n  margin-right: var(--ld-pagination-items-space);\n}\n\n.ld-pagination__sticky,\n.ld-pagination__item {\n  width: var(--ld-pagination-item-size);\n\n  ld-button::part(button) {\n    padding: 0;\n  }\n}\n\n.ld-pagination__more-indicator,\n.ld-pagination__item {\n  opacity: 0;\n  transition: opacity var(--ld-transition-duration-quick) linear;\n\n  &--visible {\n    opacity: 1;\n  }\n}\n\n.ld-pagination__more-indicator {\n  color: var(--ld-pagination-primary-col);\n  font: var(--ld-pagination-more-indicator-font);\n  font-weight: 700;\n  height: var(--ld-pagination-item-size);\n  line-height: 1;\n  pointer-events: none;\n  position: relative;\n\n  &--end {\n    right: var(--ld-pagination-column-size);\n  }\n\n  span {\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    height: 100%;\n    position: absolute;\n    white-space: nowrap;\n    width: var(--ld-pagination-item-size);\n  }\n}\n\n.ld-pagination__slide-wrapper {\n  height: var(--ld-pagination-item-size);\n  position: relative;\n  width: calc(\n    var(--ld-pagination-slider-cols) * var(--ld-pagination-column-size)\n  );\n\n  &--transitioning {\n    overflow: hidden;\n  }\n}\n\n.ld-pagination__items {\n  display: inline-flex;\n  list-style: none;\n  padding: 0;\n  pointer-events: none;\n  position: absolute;\n  transform: translateX(\n    calc(\n      var(--ld-pagination-slide-index) * var(--ld-pagination-column-size) * -1\n    )\n  );\n  transition: transform var(--ld-transition-duration-quick) ease;\n}\n\n.ld-pagination__item {\n  left: calc(var(--ld-pagination-item-pos) * var(--ld-pagination-column-size));\n  position: absolute;\n\n  &--visible {\n    pointer-events: auto;\n  }\n\n  &--selected ld-button {\n    --ld-button-bg-col: transparent;\n\n    &::part(button) {\n      color: var(--ld-pagination-selected-col);\n      font-weight: 900;\n    }\n\n    .ld-pagination__dot {\n      background-color: var(--ld-pagination-primary-col);\n    }\n  }\n}\n\n.ld-pagination__marker {\n  background: var(--ld-pagination-marker-col);\n  border-radius: var(--ld-br-m);\n  height: var(--ld-pagination-item-size);\n  position: absolute;\n  width: var(--ld-pagination-item-size);\n  z-index: -1;\n  transform: translateX(\n    calc(var(--ld-pagination-column-size) * var(--ld-pagination-selected-index))\n  );\n  transition: transform var(--ld-pagination-animation-duration) ease,\n    opacity var(--ld-pagination-animation-duration) ease;\n\n  @media (prefers-reduced-motion: no-preference) {\n    --ld-pagination-animation-duration: var(--ld-transition-duration-quick);\n  }\n\n  &--hidden {\n    opacity: 0;\n  }\n}\n\n.ld-pagination--dots {\n  --ld-pagination-item-size: var(--ld-pagination-dots-size);\n  --ld-pagination-items-space: var(--ld-pagination-dots-space);\n  --ld-pagination-column-size: max(\n    var(--ld-pagination-default-column-size),\n    var(--ld-pagination-dots-indicator-size)\n  );\n\n  .ld-pagination__arrow:not(:last-child),\n  .ld-pagination__sticky {\n    margin-right: var(--ld-sp-4);\n  }\n\n  .ld-pagination__slide-wrapper {\n    height: var(--ld-pagination-column-size);\n    margin-right: var(--ld-sp-4);\n  }\n\n  .ld-pagination__item {\n    align-items: center;\n    display: flex;\n    height: var(--ld-pagination-column-size);\n    justify-content: center;\n    left: calc(\n      var(--ld-pagination-item-pos) * var(--ld-pagination-column-size)\n    );\n    width: var(--ld-pagination-column-size);\n\n    &:not(.ld-pagination__item--selected) .ld-pagination__dot::after {\n      background-color: var(--ld-pagination-primary-col);\n      opacity: 0.3;\n    }\n  }\n}\n\n.ld-pagination__dot {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: var(--ld-pagination-column-size);\n  width: var(--ld-pagination-column-size);\n\n  &::part(button) {\n    align-items: center;\n    border-radius: var(--ld-br-full);\n    display: flex;\n    height: var(--ld-pagination-dots-indicator-size);\n    justify-content: center;\n    min-height: auto;\n    min-width: auto;\n    position: absolute;\n    width: var(--ld-pagination-dots-indicator-size);\n\n    &:active {\n      height: var(--ld-pagination-dots-indicator-size-active);\n      width: var(--ld-pagination-dots-indicator-size-active);\n    }\n\n    &:focus {\n      outline-offset: calc(var(--ld-sp-1) * -1);\n      outline-color: var(--ld-thm-primary);\n\n      &:not(:focus-visible) {\n        outline: none;\n      }\n    }\n  }\n\n  &::after {\n    background-color: var(--ld-pagination-dot-col);\n    border-radius: 50%;\n    content: '';\n    height: var(--ld-pagination-dots-size);\n    pointer-events: none;\n    position: absolute;\n    width: var(--ld-pagination-dots-size);\n  }\n}\n","import {\n  Component,\n  Host,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  Watch,\n  State,\n} from '@stencil/core'\nimport { getClassNames } from '../../utils/getClassNames'\n\nconst BUFFER_SIZE = 20\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part arrow - all arrow items (`ld-button` elements)\n * @part more-indicator - list-items containing more-indicator\n * @part end - arrow to jump to the last item (`ld-button` element)\n * @part item - all pagination items containing a number (`ld-button` elements)\n * @part items - list containing all slidable items and the marker\n * @part list-wrapper - list-item containing the `ul` element with slidable items\n * @part marker - marker highlighting the selected item\n * @part next - arrow to go to the next item (`ld-button` element)\n * @part prev - arrow to go to the previous item (`ld-button` element)\n * @part start - arrow to jump to the first item (`ld-button` element)\n * @part sticky - all sticky items (`ld-button` elements)\n * @part wrapper - list containing all pagination items\n */\n@Component({\n  assetsDirs: ['assets'],\n  tag: 'ld-pagination',\n  styleUrl: 'ld-pagination.shadow.css',\n  shadow: true,\n})\nexport class LdPagination {\n  private wrapperRef?: HTMLLIElement\n\n  /** Switch colors for brand background. */\n  @Prop() brandColor?: boolean\n\n  /** Label text for the end button (replaces the icon). */\n  @Prop() endLabel?: string\n\n  /** Hide the buttons to navigate forward/backward. */\n  @Prop() hidePrevNext? = false\n\n  /** Hide the buttons to navigate to the first/last item. */\n  @Prop() hideStartEnd? = false\n\n  /** Label to communicate the type of an item. */\n  @Prop() itemLabel? = 'Page'\n\n  /** The number of items/pages available for pagination (required to let the user jump to the last item/page). */\n  @Prop({ mutable: true }) length? = Infinity\n\n  /** Items display mode, default as numbers. */\n  @Prop() mode?: 'numbers' | 'dots' = 'numbers'\n\n  /** Label text for the forward button (replaces the icon). */\n  @Prop() nextLabel?: string\n\n  /** Number of next/previous items visible. */\n  @Prop() offset? = 2\n\n  /** Label text for the backward button (replaces the icon). */\n  @Prop() prevLabel?: string\n\n  /** The currently selected item (an index of `-1` means nothing is selected). */\n  @Prop({ mutable: true }) selectedIndex? = 0\n\n  /** Size of the pagination. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Space between dots (dots mode only, default depending on `size` prop). */\n  @Prop() space?: string\n\n  /** Label text for the start button (replaces the icon). */\n  @Prop() startLabel?: string\n\n  /** Number of items permanently visible at the start/end. */\n  @Prop() sticky? = 0\n\n  @State() maxSliderColumns = 0\n  @State() renderMoreIndicators = false\n  @State() renderSticky = false\n  @State() slidableItems: number[] = []\n  @State() sliderContent: number[] = []\n  @State() transitioning = false\n  @State() visibleItemsInSlider = 0\n\n  /** Dispatched, if the selected index changes. */\n  @Event() ldchange: EventEmitter<number>\n\n  @Watch('selectedIndex')\n  handleSelectedIndex() {\n    if (this.selectedIndex < -1) {\n      this.selectedIndex = -1\n    } else if (this.selectedIndex >= this.length) {\n      this.selectedIndex = this.length - 1\n    } else {\n      this.ldchange.emit(this.selectedIndex)\n    }\n  }\n\n  handleTransitionEnd = () => {\n    this.transitioning = false\n  }\n\n  handleTransitionStart = () => {\n    this.transitioning = true\n  }\n\n  // pageNumber is 1-based\n  private renderItem = (\n    itemNumber: number,\n    showFrom: number,\n    showTo: number\n  ) => {\n    const isDots = this.mode === 'dots'\n    const isHidden =\n      (this.renderMoreIndicators || isDots) &&\n      (itemNumber < showFrom || itemNumber > showTo)\n    const isSelected = itemNumber === this.selectedIndex + 1\n    return (\n      <li\n        aria-hidden={isHidden ? 'true' : undefined}\n        class={getClassNames([\n          'ld-pagination__item',\n          !isHidden && 'ld-pagination__item--visible',\n          isSelected && 'ld-pagination__item--selected',\n        ])}\n        key={itemNumber}\n        style={{ '--ld-pagination-item-pos': `${itemNumber - 1}` }}\n      >\n        <ld-button\n          aria-current={isSelected ? 'true' : undefined}\n          aria-label={isHidden ? undefined : `${this.itemLabel} ${itemNumber}`}\n          class={isDots ? 'ld-pagination__dot' : undefined}\n          ld-tabindex={isHidden ? -1 : undefined}\n          mode=\"ghost\"\n          onClick={() => {\n            this.selectedIndex = itemNumber - 1\n          }}\n          part=\"item focusable\"\n          size={this.size}\n        >\n          {!isDots && itemNumber}\n        </ld-button>\n      </li>\n    )\n  }\n\n  private calculateSliderContent = () => {\n    const directlyReachableFirstItems = this.maxSliderColumns + this.sticky - 1\n    const directlyReachableLastItems =\n      this.length - this.maxSliderColumns - this.sticky + 1\n\n    this.sliderContent = this.slidableItems.filter(\n      (itemNumber) =>\n        (itemNumber > this.selectedIndex - BUFFER_SIZE &&\n          itemNumber <= this.selectedIndex + BUFFER_SIZE) ||\n        // render the first/last items in case the user can navigate there directly\n        ((!this.hideStartEnd || this.sticky > 0) &&\n          (itemNumber <= directlyReachableFirstItems ||\n            itemNumber > directlyReachableLastItems))\n    )\n  }\n\n  @Watch('length')\n  @Watch('mode')\n  @Watch('offset')\n  @Watch('sticky')\n  componentWillLoad() {\n    this.visibleItemsInSlider = this.offset * 2 + 1\n    const maxVisibleItems = this.sticky * 2 + this.visibleItemsInSlider\n    this.maxSliderColumns = this.visibleItemsInSlider + 2\n    this.renderSticky = this.sticky > 0 && this.mode !== 'dots'\n    this.renderMoreIndicators =\n      this.mode !== 'dots' && this.length > maxVisibleItems + 2\n    this.slidableItems = Array.from({\n      length: this.length === Infinity ? 9999 : this.length - this.sticky * 2,\n    }).map((_, index) => index + this.sticky + 1)\n\n    if (this.length < 1) {\n      this.length = 1\n    }\n\n    if (this.selectedIndex < -1) {\n      this.selectedIndex = -1\n    } else if (this.selectedIndex >= this.length) {\n      this.selectedIndex = this.length - 1\n    }\n\n    this.calculateSliderContent()\n  }\n\n  componentDidLoad() {\n    if (this.wrapperRef) {\n      this.wrapperRef.addEventListener(\n        'transitionstart',\n        this.handleTransitionStart\n      )\n      this.wrapperRef.addEventListener(\n        'transitionend',\n        this.handleTransitionEnd\n      )\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.wrapperRef) {\n      this.wrapperRef.removeEventListener(\n        'transitionstart',\n        this.handleTransitionStart\n      )\n      this.wrapperRef.removeEventListener(\n        'transitionend',\n        this.handleTransitionEnd\n      )\n    }\n  }\n\n  render() {\n    const isDots = this.mode === 'dots'\n    const styleDots =\n      isDots && this.space\n        ? {\n            '--ld-pagination-dots-space':\n              this.space === '0' ? '0px' : this.space,\n          }\n        : undefined\n    // +1 because it must be the index right to the centered item\n    const showStartMoreIndicator =\n      this.renderMoreIndicators &&\n      this.selectedIndex > this.sticky + this.offset + 1\n    // -1 because it is 0-based and another -1 because it must be the index left to the centered item\n    const showEndMoreIndicator =\n      this.renderMoreIndicators &&\n      this.selectedIndex < this.length - this.offset - this.sticky - 2\n    const showFrom =\n      // +1 because it is not 0-based\n      Math.max(\n        Math.min(\n          this.selectedIndex -\n            this.offset -\n            // start hiding numbers\n            (showStartMoreIndicator ? 0 : 1),\n          this.length -\n            this.visibleItemsInSlider -\n            this.sticky -\n            1 +\n            (isDots ? -1 : 0)\n        ),\n        this.sticky\n      ) + 1\n    // +1 because it is not 0-based\n    const showTo =\n      Math.min(\n        Math.max(\n          this.selectedIndex + (showEndMoreIndicator ? 0 : 1),\n          this.offset + this.sticky + 1 + (isDots ? 1 : 0)\n        ) + this.offset,\n        this.length - this.sticky\n      ) + 1\n\n    return (\n      <Host role=\"navigation\">\n        <ul\n          aria-label=\"Pagination\"\n          class={getClassNames([\n            'ld-pagination',\n            this.size && `ld-pagination--${this.size}`,\n            isDots && `ld-pagination--dots`,\n            this.brandColor && 'ld-pagination--brand-color',\n          ])}\n          part=\"wrapper\"\n          style={styleDots}\n        >\n          {!this.hideStartEnd && (\n            <li class=\"ld-pagination__arrow\">\n              <ld-button\n                aria-label={\n                  this.startLabel\n                    ? undefined\n                    : `First ${this.itemLabel.toLocaleLowerCase()}`\n                }\n                disabled={this.selectedIndex < 1 ? true : undefined}\n                mode=\"ghost\"\n                onClick={() => {\n                  this.selectedIndex = 0\n                }}\n                part=\"arrow start focusable\"\n                size={this.size}\n              >\n                {this.startLabel ? (\n                  this.startLabel\n                ) : (\n                  <ld-icon name=\"arrow-double-left\" size={this.size} />\n                )}\n              </ld-button>\n            </li>\n          )}\n          {!this.hidePrevNext && (\n            <li class=\"ld-pagination__arrow\">\n              <ld-button\n                aria-label={\n                  this.prevLabel\n                    ? undefined\n                    : `Previous ${this.itemLabel.toLocaleLowerCase()}`\n                }\n                disabled={this.selectedIndex < 1}\n                mode=\"ghost\"\n                onClick={() => {\n                  if (this.selectedIndex < 1) return\n                  this.selectedIndex -= 1\n                }}\n                part=\"arrow prev focusable\"\n                size={this.size}\n              >\n                {this.prevLabel ? (\n                  this.prevLabel\n                ) : (\n                  <ld-icon name=\"arrow-left\" size={this.size} />\n                )}\n              </ld-button>\n            </li>\n          )}\n          {this.renderSticky &&\n            Array.from({ length: Math.min(this.sticky, this.length) }).map(\n              (_: unknown, index: number) => {\n                return (\n                  <li class=\"ld-pagination__sticky\">\n                    <ld-button\n                      aria-label={`${this.itemLabel} ${index + 1}`}\n                      mode=\"ghost\"\n                      onClick={() => {\n                        this.selectedIndex = index\n                      }}\n                      part=\"sticky item focusable\"\n                      size={this.size}\n                    >\n                      {index + 1}\n                    </ld-button>\n                  </li>\n                )\n              }\n            )}\n          {this.renderMoreIndicators && (\n            <li\n              class={getClassNames([\n                'ld-pagination__more-indicator',\n                showStartMoreIndicator &&\n                  'ld-pagination__more-indicator--visible',\n              ])}\n              part=\"more-indicator\"\n            >\n              <span>. . .</span>\n            </li>\n          )}\n          <li\n            class={getClassNames([\n              'ld-pagination__slide-wrapper',\n              this.transitioning &&\n                'ld-pagination__slide-wrapper--transitioning',\n            ])}\n            part=\"slide-wrapper\"\n            ref={(ref) => (this.wrapperRef = ref)}\n            style={{\n              '--ld-pagination-slider-cols': `${Math.min(\n                this.slidableItems.length,\n                this.maxSliderColumns\n              )}`,\n            }}\n          >\n            <ul\n              class=\"ld-pagination__items\"\n              part=\"items\"\n              style={{\n                '--ld-pagination-slide-index': `${Math.max(\n                  Math.min(\n                    this.selectedIndex - this.offset - 1,\n                    // -1 because of the \"...\" and another -1 because it is 0-based\n                    this.length - this.visibleItemsInSlider - this.sticky - 2\n                  ),\n                  // marker position in case of length < sticky\n                  Math.min(this.sticky, this.length),\n                  0\n                )}`,\n              }}\n            >\n              {!isDots && (\n                <li\n                  class={getClassNames([\n                    'ld-pagination__marker',\n                    this.selectedIndex < 0 && 'ld-pagination__marker--hidden',\n                  ])}\n                  key=\"marker\"\n                  onTransitionEnd={this.calculateSliderContent}\n                  part=\"marker\"\n                  style={{\n                    '--ld-pagination-selected-index': `${Math.max(\n                      this.selectedIndex,\n                      0\n                    )}`,\n                  }}\n                />\n              )}\n              {this.length > 0 &&\n                this.sliderContent.map((itemNumber) =>\n                  this.renderItem(itemNumber, showFrom, showTo)\n                )}\n            </ul>\n          </li>\n          {this.renderMoreIndicators && (\n            <li\n              class={getClassNames([\n                'ld-pagination__more-indicator ld-pagination__more-indicator--end',\n                showEndMoreIndicator &&\n                  'ld-pagination__more-indicator--visible',\n              ])}\n              part=\"more-indicator\"\n            >\n              <span>. . .</span>\n            </li>\n          )}\n          {this.renderSticky &&\n            this.length < Infinity &&\n            Array.from({ length: this.sticky })\n              .map((_: unknown, index: number) => {\n                const itemNumber = this.length - index\n\n                if (itemNumber <= this.sticky) {\n                  return null\n                }\n\n                return (\n                  <li class=\"ld-pagination__sticky\">\n                    <ld-button\n                      mode=\"ghost\"\n                      onClick={() => {\n                        this.selectedIndex = itemNumber - 1\n                      }}\n                      part=\"sticky item focusable\"\n                      size={this.size}\n                    >\n                      {itemNumber}\n                    </ld-button>\n                  </li>\n                )\n              })\n              .reverse()}\n          {!this.hidePrevNext && (\n            <li class=\"ld-pagination__arrow\">\n              <ld-button\n                aria-label={\n                  this.nextLabel\n                    ? undefined\n                    : `Next ${this.itemLabel.toLocaleLowerCase()}`\n                }\n                disabled={this.selectedIndex >= this.length - 1}\n                mode=\"ghost\"\n                onClick={() => {\n                  if (this.selectedIndex >= this.length - 1) return\n                  this.selectedIndex += 1\n                }}\n                part=\"arrow next focusable\"\n                size={this.size}\n              >\n                {this.nextLabel ? (\n                  this.nextLabel\n                ) : (\n                  <ld-icon name=\"arrow-right\" size={this.size} />\n                )}\n              </ld-button>\n            </li>\n          )}\n          {this.length < Infinity && !this.hideStartEnd && (\n            <li class=\"ld-pagination__arrow\">\n              <ld-button\n                aria-label={\n                  this.endLabel\n                    ? undefined\n                    : `Last ${this.itemLabel.toLocaleLowerCase()}`\n                }\n                disabled={this.selectedIndex >= this.length - 1}\n                mode=\"ghost\"\n                onClick={() => {\n                  this.selectedIndex = this.length - 1\n                }}\n                part=\"arrow end focusable\"\n                size={this.size}\n              >\n                {this.endLabel ? (\n                  this.endLabel\n                ) : (\n                  <ld-icon name=\"arrow-double-right\" size={this.size} />\n                )}\n              </ld-button>\n            </li>\n          )}\n        </ul>\n      </Host>\n    )\n  }\n}\n"],"names":["getClassNames","classNames","filter","className","join","LdPagination","handleTransitionEnd","this","transitioning","handleTransitionStart","renderItem","itemNumber","showFrom","showTo","isDots","mode","isHidden","renderMoreIndicators","isSelected","selectedIndex","h","undefined","class","key","style","itemLabel","onClick","part","size","calculateSliderContent","directlyReachableFirstItems","maxSliderColumns","sticky","directlyReachableLastItems","length","sliderContent","slidableItems","hideStartEnd","Infinity","handleSelectedIndex","ldchange","emit","componentWillLoad","visibleItemsInSlider","offset","maxVisibleItems","renderSticky","Array","from","map","_","index","componentDidLoad","wrapperRef","addEventListener","disconnectedCallback","removeEventListener","render","styleDots","space","showStartMoreIndicator","showEndMoreIndicator","Math","max","min","Host","role","brandColor","startLabel","toLocaleLowerCase","disabled","name","hidePrevNext","prevLabel","ref","onTransitionEnd","reverse","nextLabel","endLabel"],"sourceRoot":""}